{"version":3,"sources":["TerminalButtons.js","TerminalInput.js","TerminalTemplateModel.js","TerminalCommandModel.js","Terminal.js"],"names":[],"mappings":"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","file":"terminal.js","sourcesContent":["var TerminalButtons = React.createClass({\n    render: function() {\n        var styles = {\n            terminalButtonContainer: {\n                height: '100%',\n                width: '100%',\n                position: 'relative'\n            },\n            terminalButton: {\n                height: '12px',\n                width: '12px',\n                borderRadius: '50%',\n                position: 'absolute',\n                top: '10px'\n            },\n            terminalButtonClose: {\n                left: '10px',\n                backgroundColor: 'tomato'\n            },\n            terminalButtonMinimize: {\n                left: '32px',\n                backgroundColor: 'gold'\n            },\n            terminalButtonExpand: {\n                left: '54px',\n                backgroundColor: 'limegreen'\n            }\n        }; // Hover styles got put into the terminal.scss file for now\n        return (\n            <div style={[ styles.terminalButtonContainer ]}>\n                <div \n                    className=\"terminal--button\" \n                    onClick={this.props.handleTerminalClose}\n                    style={[ \n                        styles.terminalButton, \n                        styles.terminalButtonClose \n                    ]}\n                ></div>\n                <div \n                    className=\"terminal--button\" \n                    onClick={this.props.handleTerminalMinimize}\n                    style={[ \n                        styles.terminalButton, \n                        styles.terminalButtonMinimize \n                    ]}\n                ></div>\n                <div \n                    className=\"terminal--button\" \n                    onClick={this.props.handleTerminalExpand}\n                    style={[ \n                        styles.terminalButton, \n                        styles.terminalButtonExpand \n                    ]}\n                ></div>\n            </div>\n        );\n    } \n});\n\nTerminalButtons = Radium(TerminalButtons);\n","var TerminalInput = React.createClass({\n    componentDidUpdate: function() {\n        this.terminalTextBox.scrollTop = this.terminalTextBox.scrollHeight;    \n    },\n    focusInput: function() {\n        this.refs.terminalInput.focus();\n    },\n    render: function() {\n        var displayPreviousTerminalCommands = this.props.terminalPreviousCommands.map(function(command) {\n            var styles = {\n                terminalMessageText: {\n                    color: '#00ff00',\n                    backgroundColor: 'deeppink'\n                }\n            };\n            if (!command.message && !command.template ) {\n                return <div>gddynytdtlls.com:{this.props.currentURIPath} {this.props.terminalUserName}$ {command.content}</div>\n            } else if (command.template) {\n                switch (command.template) {\n                    case 'aboutAbout':\n                        return this.props.terminalTemplate.aboutAbout();\n                    case 'aboutGifs':\n                        return this.props.terminalTemplate.aboutGifs();\n                    case 'aboutHelp':\n                        return this.props.terminalTemplate.aboutHelp();\n                    case 'aboutHome':\n                        return this.props.terminalTemplate.aboutHome();\n                    case 'aboutSite': \n                        return this.props.terminalTemplate.aboutSite();\n                    case 'clearHelp':\n                        return this.props.terminalTemplate.clearHelp();\n                    case 'closeHelp':\n                        return this.props.terminalTemplate.closeHelp();\n                    case 'gitHelp':\n                        return this.props.terminalTemplate.gitHelp();\n                    case 'gotoHelp':\n                        return this.props.terminalTemplate.gotoHelp();\n                    case 'gotoList': \n                        return this.props.terminalTemplate.gotoList();\n                    case 'help':\n                        return this.props.terminalTemplate.help();\n                    case 'helpHelp':\n                        return this.props.terminalTemplate.helpHelp();\n                    case 'hideHelp':\n                        return this.props.terminalTemplate.hideHelp();\n                    case 'nameHelp':\n                        return this.props.terminalTemplate.nameHelp();\n                    case 'styleHelp':\n                        return this.props.terminalTemplate.styleHelp();\n                    case 'validColors':\n                        return this.props.terminalTemplate.validColors();\n                    // case 'watchTest':\n                    //     return this.props.terminalTemplate.watchTest();\n                    case 'welcome':\n                        return this.props.terminalTemplate.welcome();\n                    default:\n                        console.log('add the template to terminalInput, dude');\n                        return;\n                }\n            } else {\n                return (\n                    <div>\n                        <div style={styles.terminalMessageText}>{command.content}</div>\n                    </div>\n                );\n            }\n        }, this);\n\n        var styles = {\n            terminalForm: {\n                display: 'flex',\n                width: '100%',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n            },\n            terminalHidden: {\n                display: 'none'\n            },\n            terminalInput: {\n                flexGrow: '1',\n                height: '12px',\n                backgroundColor: 'transparent',\n            },\n            terminalInputName: {\n                marginRight: '4px'\n            },\n            terminalText: {\n                fontFamily: 'monaco',\n                color: this.props.terminalTextColor,\n                fontSize: '12px'\n            },\n            terminalMessageText: {\n                color: 'pink'\n            },\n            terminalTextBox: {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                width: '100%',\n                height: '100%',\n                padding: '10px',\n                overflow: 'scroll',\n                boxSizing: 'border-box'\n            },\n        };\n\n        return (\n            <div \n                style={[\n                    styles.terminalText,\n                    styles.terminalTextBox,\n                    this.props.terminalHidden && styles.terminalHidden,\n                    this.props.terminalClosed && styles.terminalHidden\n                ]}\n                ref={(ref) => this.terminalTextBox = ref}\n            >\n                {displayPreviousTerminalCommands}\n                <form\n                    onSubmit={this.props.handleTerminalInputSubmit}\n                    style={[ styles.terminalForm ]}\n                >\n                    <div style={[ styles.terminalInputName ]}>gddynytdtlls.com:{this.props.currentURIPath} {this.props.terminalUserName}$</div>\n                    <input \n                        autoFocus\n                        onChange={this.props.handleTerminalInputTextChange}\n                        style={[ styles.terminalInput, styles.terminalText ]}\n                        value={this.props.terminalInputText}\n                        ref=\"terminalInput\"\n                    />\n                </form>\n            </div>\n        );\n    } \n});\n\nTerminalInput = Radium(TerminalInput);","var app = app || {};\n\n(function() {\n\n    'use strict';\n\n    app.TerminalTemplateModel = function() {};\n\n    app.TerminalTemplateModel.prototype.clearHelp = function() {\n        var styles = {\n            clear: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            clearHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            clearBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return (\n            <div style={styles.clear}>\n                <div style={styles.heading}>\n                    <div style={styles.clearHeading}>Clear:</div>\n                </div>\n                <div style={styles.clearBody}>\n                    <div style={styles.bodyElements}>\n                        the [clear] command is going to clear your command and message history from the terminal.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        other than the default [-h]/[--help] modifiers, [clear] accepts no [options] or [modifiers].\n                    </div>\n                    <div>\n                        syntax: [clear] eg. clear\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.aboutAbout = function() {\n        var styles = {\n            aboutAbout: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            aboutAboutHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            aboutAboutBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '0px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.aboutAbout}>\n                <div style={styles.aboutAboutBody}>\n                    <div style={styles.bodyElements}>\n                        {\"<----about---->\"}\n                    </div> \n                    <img height='350px' src='/images/metaPug.jpg' />\n                    <div style={styles.bodyElements}>\n                        as far as reading about the about page,\n                    </div> \n                    <div style={styles.bodyElements}>\n                        it isn't a lot different than this.\n                    </div> \n                </div>\n            </div>\n        );//'\n    };\n\n\n    app.TerminalTemplateModel.prototype.aboutHome = function() {\n        var styles = {\n            aboutHome: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutHomeHeading: {\n                color: 'white'\n            },\n            aboutHomeBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.aboutHome}>\n                <div style={styles.aboutHomeBody}>\n                    <div style={styles.bodyElements}>\n                        {\"<----home---->\"}\n                    </div>\n                    <div style={styles.bodyElements}>\n                        video of an anonymous person trying not to blow a gasket.\n                    </div>\n                </div>\n            </div>\n        );//'\n    };\n\n\n    app.TerminalTemplateModel.prototype.aboutGifs = function() {\n        var styles = {\n            aboutGifs: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutGifsHeading: {\n                color: 'white'\n            },\n            aboutGifsBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.aboutGifs}>\n                <div style={styles.aboutGifsBody}>\n                    <div style={styles.bodyElements}>\n                        {\"<----contemporary art gifs---->\"}\n                    </div>\n                    <div style={styles.bodyElements}>\n                        this is where the good writing goes.\n                    </div>\n                </div>\n            </div>\n        );//'\n    };\n\n\n    app.TerminalTemplateModel.prototype.aboutSite = function() {\n       var styles = {\n            aboutGifs: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutGifsHeading: {\n                color: 'white'\n            },\n            aboutGifsBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.aboutGifs}>\n                <div style={styles.aboutGifsBody}>\n                    <div style={styles.bodyElements}>\n                        About the Site:\n                    </div>\n                    <div style={styles.bodyElements}>\n                        gotta write about it man.\n                    </div>\n                </div>\n            </div>\n        );//' \n    };\n\n\n    app.TerminalTemplateModel.prototype.aboutMap = function() {\n        var styles = {\n            aboutGifs: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutGifsHeading: {\n                color: 'white'\n            },\n            aboutGifsBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.aboutGifs}>\n                <div style={styles.aboutGifsBody}>\n                    <div style={styles.bodyElements}>\n                        {\"<----map---->\"}\n                    </div>\n                    <div style={styles.bodyElements}>\n                        this page is kind of a mess whether you're looking at the content or the implementation.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        initially I started programming because I was interested in the ratio of putting work into a project veruses getting work back out of it. \n                    </div>\n                    <div style={styles.bodyElements}>\n                        when I got out of school I started working in cabinet shops.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        \n                    </div>\n                    <div style={styles.bodyElements}>\n                        \n                    </div>\n                    <div style={styles.bodyElements}>\n                        \n                    </div>\n                    <div style={styles.bodyElements}>\n                        \n                    </div>\n                </div>\n            </div>\n        );//'\n    };\n\n\n    app.TerminalTemplateModel.prototype.closeHelp = function() {\n        var styles = {\n            close: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            closeHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            closeBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return (\n            <div style={styles.close}>\n                <div style={styles.heading}>\n                    <div style={styles.closeHeading}>Close:</div>\n                </div>\n                <div style={styles.closeBody}>\n                    <div style={styles.bodyElements}>\n                        the [close] command is going to close the Terminal. It can be brought back by pressing the 't' key on your keyboard. it performs the same action as clicking the red button on the terminal toolbar.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        other than the default [-h]/[--help] modifiers, [close] accepts no [options] or [modifiers]\n                    </div>\n                    <div>\n                        syntax: [close] eg. close\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.aboutHelp = function() {\n        var styles = {\n            about: {\n                height: '215px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            aboutHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            aboutBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.about}>\n                <div style={styles.heading}>\n                    <div style={styles.aboutHeading}>About:</div>\n                </div>\n                <div style={styles.aboutBody}>\n                    <div style={styles.bodyElements}>\n                        the [about] command will tell you information about either the page you're currently on or the site as a whole, depending on the [modifier] that is passed.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        [about] accepts no [options].\n                    </div>\n                    <div style={styles.bodyElements}>\n                        with the exception of [-h]/[--help], [about] accepts two modifiers:\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginTop: '10px' }]}>\n                        [-p]: displays information about the page you are currently on.\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginBottom: '15px' }]}>\n                        [-s]: displays information about the entire site.\n                    </div>\n                    <div>\n                        syntax: [about] [modifier] eg. about -p \n                    </div>\n                </div>\n            </div>\n        );//'\n    };\n\n\n    app.TerminalTemplateModel.prototype.gitHelp = function() {\n        var styles = {\n            gitHelp: {\n                height: '125px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            gitHelpHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            gitHelpBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.gitHelp}>\n                <div style={styles.heading}>\n                    <div style={styles.gitHelpHeading}>Git:</div>\n                </div>\n                <div style={styles.gitHelpBody}>\n                    <div style={styles.bodyElements}>\n                        the [git] command will leave gddynytdtlls.com and redirect to the source code hosted on GitHub.\n                    </div>\n                    <div style={styles.bodyElements}>\n                         with the exception of [-h]/[--help], [git] accepts no [modifier]s or [options].\n                    </div>\n                    <div>\n                        syntax: [git] eg. git\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.gotoHelp = function() {\n        var styles = {\n            goto: {\n                height: '170px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            gotoHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            gotoBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.goto}>\n                <div style={styles.heading}>\n                    <div style={styles.gotoHeading}>Goto:</div>\n                </div>\n                <div style={styles.gotoBody}>\n                    <div style={styles.bodyElements}>\n                        the [goto] command is used to navigate to other pages on the site via the terminal.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        with the exception of [-h]/[--help], [goto] accepts two modifiers, [-l] and [-m].\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginTop: '10px' }]}>\n                        [-l]: displays a list of all avaliable routes.\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginBottom: '15px' }]}>\n                        [-m]: opens the new webpage with the terminal minimized.\n                    </div>\n                    <div>\n                        syntax: [goto] [option] [modifier] eg. goto gifs -m \n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.gotoList = function() {\n        var styles = {\n            goto: {\n                height: '140px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            gotoHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            gotoBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '25px'\n            }\n        };\n        return (\n            <div style={styles.goto}>\n                <div style={styles.heading}>\n                    <div style={styles.gotoHeading}>Route List:</div>\n                </div>\n                <div style={styles.gotoBody}>\n                    <div style={[styles.bodyElements, styles.indent]}>\n                        about - contact info and me at the gallery or club ---------------------\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent]}>\n                        gifs -- make some contemporary art gifs --------------------------------\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent]}>\n                        home -- really there isn't much here except the intro video ------------\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent]}>\n                        map --- look at photographs with their coordinates plotted on a map ----\n                    </div>\n                </div>\n            </div>\n        );\n        //'\n    };\n\n\n\n    app.TerminalTemplateModel.prototype.helpHelp = function() {\n        var styles = {\n            help: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            helpHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            helpBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return (\n            <div style={styles.help}>\n                <div style={styles.heading}>\n                    <div style={styles.helpHeading}>Help:</div>\n                </div>\n                <div style={styles.helpBody}>\n                    <div style={styles.bodyElements}>\n                        the [help] command is going to give you a directory of commands you can call.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        other than the default [-h]/[--help] modifiers, [help] accepts no [options] or [modifiers]\n                    </div>\n                    <div>\n                        syntax: [help] eg. help\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    app.TerminalTemplateModel.prototype.nameHelp = function() {\n        var styles = {\n            name: {\n                height: '160px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            nameHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            nameBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.name}>\n                <div style={styles.heading}>\n                    <div style={styles.nameHeading}>Name:</div>\n                </div>\n                <div style={styles.nameBody}>\n                    <div style={styles.bodyElements}>\n                        the [name] command is used to set your username. (NO SPACES ALLOWED).\n                    </div>\n                    <div style={styles.bodyElements}>\n                        with the exception of [-h]/[--help], [name] accepts one modifier:\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginTop: '10px', marginBottom: '15px' }]}>\n                        [-u]: transforms the [option] you pass for your username to CAPS.\n                    </div>\n                    <div>\n                        syntax: [name] [option] [modifier] eg. name free_willy_free$tyle -u\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.hideHelp = function() {\n        var styles = {\n            hide: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '5px 0'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            hideHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            hideBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return (\n            <div style={styles.hide}>\n                <div style={styles.heading}>\n                    <div style={styles.hideHeading}>Hide:</div>\n                </div>\n                <div style={styles.hideBody}>\n                    <div style={styles.bodyElements}>\n                        the [hide] command is going to minimize the Terminal. It does the same thing as clicking the yellow button on the terminal toolbar. You can expand the terminal by clicking the green button on the terminal toolbar, or my pressing the 'm' key on your keyboard.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        other than the default [-h]/[--help] modifiers, [hide] accepts no [options] or [modifiers]\n                    </div>\n                    <div>\n                        syntax: [hide] eg. hide\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n\n    app.TerminalTemplateModel.prototype.help = function() {\n        var styles = {\n            helpContainer: {\n                height: '325px',\n                marginTop: '10px',\n                marginBottom: '5px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                flexDirection: 'column'\n            },\n            helpHeading: {\n                height: '20%',\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '40px',\n                letterSpacing: '.5em'\n            },\n            helpHeadingText: {\n                padding: '0px .5em',\n                border: '5px dotted #00ff00'\n            },\n            helpBody: {\n                height: '80%',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            },\n            helpBodySection: {\n                height: '100%',\n                flex: '1'\n            },\n            commandsHeading: {\n               \n            },\n            commandsList: {\n                flex: '1',\n                boxSizing: 'border-box',\n                paddingLeft: '130px',\n                marginBottom: '5px'\n            },\n            commandsListText: {\n                color: 'white',\n                backgroundColor: 'deeppink',\n                padding: '0 30px 0 0'\n            },\n            infoSection: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                paddingRight: '60px',\n                boxSizing: 'border-box'\n            }\n        }\n        return (\n            <div style={styles.helpContainer}>\n                <div style={styles.helpHeading}>\n                    <div style={styles.helpHeadingText}>HELP MEN<span style={{ letterSpacing: '0' }}>U</span></div>\n                </div>\n                <div style={styles.helpBody}>\n                    <div style={[styles.helpBodySection]}>\n                        <div style={styles.commandsHeading}>List of Commands:</div>\n                        <div style={styles.commandsList}>about --- [-s][-p] -------------</div>\n                        <div style={styles.commandsList}>clear --- [no modifiers] -------</div>\n                        <div style={styles.commandsList}>close --- [no modifiers] -------</div>\n                        <div style={styles.commandsList}>git ----- [no modifiers] -------</div>\n                        <div style={styles.commandsList}>goto ---- [-l][-m] -------------</div>\n                        <div style={styles.commandsList}>help ---- [no modifiers] -------</div>\n                        <div style={styles.commandsList}>hide ---- [no modifiers] -------</div>\n                        <div style={styles.commandsList}>name ---- [-u] -----------------</div>\n                        <div style={styles.commandsList}>style --- [-tc][-c][-bg] -------</div>\n                        <div style={styles.commandsList}>in addition to these [modifiers], all commands have a help menu that can be accessed by passing the [-h] or [--help] modifier</div>\n                    </div>\n                </div>\n            </div>\n        ); \n    };\n\n\n    app.TerminalTemplateModel.prototype.styleHelp = function() {\n        var styles = {\n            styleHelp: {\n                height: '230px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            styleHelpHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            styleHelpBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return (\n            <div style={styles.styleHelp}>\n                <div style={styles.heading}>\n                    <div style={styles.styleHelpHeading}>Style:</div>\n                </div>\n                <div style={styles.styleHelpBody}>\n                    <div style={styles.bodyElements}>\n                        the [style] command is used to customize the look of your terminal.\n                    </div>\n                    <div style={styles.bodyElements}>\n                        with the exception of [-h]/[--help], [style] accepts three modifiers:\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginTop: '10px' }]}>\n                        [-bg]: allows you to change the background color of the terminal.\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent]}>\n                        [-c]: opens a list of valid colors. In addition to the colors on the list, both [-bg] and [-tc] can be passed the 'default' [option],\n                        which will render a low opacity black for [-bg], and #00ff00 for [-tc].\n                    </div>\n                    <div style={[styles.bodyElements, styles.indent, { marginBottom: '15px' }]}>\n                        [-tc]: allows you to change the font color of the terminal.\n                    </div>\n                    <div>\n                        syntax: [style] [option] [modifier] eg. style deeppink -bg\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.validColors = function() {\n        var displayTerminalColors = terminalColors.map(function(color) {\n            if (color === 'indigo') {\n                return <span style={{color: color}}><span style={{ color: '#00ff00' }}>and{ \" \" }</span>{color}</span>;\n            }\n            return <span><span style={{color: color}}>{color}</span>,{ \" \" }</span>;\n        });\n        var styles = {\n            colorsContainer: {\n                height: '335px',\n                width: '100%'\n            },\n            colorsHeader: {\n                height: '60px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                boxSizing: 'border-box',\n                fontSize: '30px'\n            },\n            colorsBody: {\n                width: '100%',\n                paddingLeft: '20px',\n                boxSizing: 'border-box'\n            }\n        };\n        return (\n            <div style={styles.colorsContainer}>\n                <div style={styles.colorsHeader}>\n                    List of Colors:\n                </div>\n                <div style={styles.colorsBody}>\n                    {displayTerminalColors}\n                </div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.watchTest = function() {\n        var styles = {\n            test: {\n                height: '95%',\n                width: '100%',\n                color: 'white',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                position: 'relative'\n            },\n            bubble: {\n                position: 'absolute',\n                height: '80px',\n                width: '80px',\n                top: '50%',\n                left: '50%',\n                transition: 'all 1s ease',\n                border: '1px solid rgba(255,255,255,.5)',\n                boxShadow: 'inset 0 0 12px rgba(255,255,255,.5)',\n                borderRadius: '50%'\n            }\n        };\n        return (\n            <div style={styles.test}>\n                <div style={styles.bubble}></div>\n            </div>\n        );\n    };\n\n\n    app.TerminalTemplateModel.prototype.welcome = function() {\n        var styles = {\n            welcomeContainer: {\n                height: '96%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column',\n                paddingTop: '10px',\n                boxSizing: 'border-box'\n            },\n            welcomeHeading: {\n                height: '13%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            },\n            welcomeHeadingText: {\n                fontSize: '40px',\n                color: 'white'\n            },\n            welcomeBody: {\n                height: '87%',\n                width: '100%',\n                boxSizing: 'border-box'\n            },\n            welcomeBodyElement: {\n                marginLeft: '20px',\n                marginBottom: '5px'\n            }\n        }\n        return (\n            <div style={styles.welcomeContainer}>\n                <div style={styles.welcomeHeading}>\n                    <div style={styles.welcomeHeadingText}>Welcome</div>\n                </div>\n                <div style={styles.welcomeBody}>\n                    <div style={{marginBottom: '11px'}}>this is the gddynytdtlls.com <span style={{color: 'white'}}><i>Terminal</i></span>.</div>\n                    <div style={styles.welcomeBodyElement}>the terminal can be used for <span style={{color: 'white'}}>navigating</span> through the site,</div>\n                    <div style={styles.welcomeBodyElement}><span style={{color: 'white'}}>reading</span> about the different pages,</div>\n                    <div style={styles.welcomeBodyElement}>and <span style={{color: 'white'}}>watching</span> animations.</div>\n                    <div style={styles.welcomeBodyElement}>the terminal can also be <span style={{color: 'white'}}>styled</span>,</div>\n                    <div style={styles.welcomeBodyElement}><span style={{color: 'white'}}>minimized</span>, <span style={{color: 'white'}}>closed</span>, and</div>\n                    <div style={styles.welcomeBodyElement}>have a set <span style={{color: 'white'}}>username</span>.</div>\n                    <div style={styles.welcomeBodyElement}>However, it's just the vegan gravy on the tofurkey:</div>\n                    <div style={styles.welcomeBodyElement}>great that it's here, but what needs to happen</div>\n                    <div style={styles.welcomeBodyElement}>can happen without it.</div>\n                    <div style={styles.welcomeBodyElement}>You can <span style={{color: 'white'}}>minimize</span> the terminal by clicking the <span style={{color: 'white'}}>yellow button</span></div>\n                    <div style={styles.welcomeBodyElement}>on the terminal toolbar, and operate the site like any</div>\n                    <div style={styles.welcomeBodyElement}>other site. there's a dropdown nav up top.</div>\n                    <div style={styles.welcomeBodyElement}>otherwise, <span style={{color: 'white'}}>type 'help'</span></div>\n                    <div style={styles.welcomeBodyElement}>to see a <span style={{color: 'white'}}>list</span> of</div>\n                    <div style={styles.welcomeBodyElement}><span style={{color: 'white'}}>commands</span>.</div>\n                </div>\n            </div>\n        );//'\n    };\n\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","var docCookies = {\n  getItem: function (sKey) {\n    if (!sKey) { return null; }\n    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n  },\n  setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) { return false; }\n    var sExpires = \"\";\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd;\n          break;\n        case String:\n          sExpires = \"; expires=\" + vEnd;\n          break;\n        case Date:\n          sExpires = \"; expires=\" + vEnd.toUTCString();\n          break;\n      }\n    }\n    document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\");\n    return true;\n  },\n  removeItem: function (sKey, sPath, sDomain) {\n    if (!this.hasItem(sKey)) { return false; }\n    document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\");\n    return true;\n  },\n  hasItem: function (sKey) {\n    if (!sKey) { return false; }\n    return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\n  },\n  keys: function () {\n    var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n    for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n    return aKeys;\n  }\n};\n\n\nvar terminalColors = [\n    'palevioletred', 'mediumturquoise', 'orange', 'hotpink', 'darkred', 'wheat', 'darkslategrey', 'orangered', 'mintcream', 'darkorchid', 'mediumseagreen', 'salmon', 'lightslategrey', 'rebeccapurple', 'lavender', 'black', 'darkviolet', 'gainsboro', 'slateblue', 'deeppink', 'pink', 'darkslateblue', 'cyan', 'lime', 'blue', 'mediumspringgreen', 'chartreuse', 'mediumslateblue', 'lightsalmon', 'mediumorchid', 'sienna', 'dodgerblue', 'grey', 'aliceblue', 'honeydew', 'goldenrod', 'azure', 'floralwhite', 'lightsteelblue', 'powderblue', 'purple', 'darkolivegreen', 'firebrick', 'midnightblue', 'darkseagreen', 'turquoise', 'darkgreen', 'ghostwhite', 'blanchedalmond', 'coral', 'lavenderblush', 'darkmagenta', 'darksalmon', 'rosybrown', 'lemonchiffon', 'paleturquoise', 'magenta', 'cornsilk', 'brown', 'olivedrab', 'maroon', 'yellowgreen', 'steelblue', 'lightgreen', 'orchid', 'lightcoral', 'cadetblue', 'lightgoldenrodyellow', 'gray', 'darkkhaki', 'fuchsia', 'peachpuff', 'dimgray', 'indianred', 'crimson', 'khaki', 'darkcyan', 'deepskyblue', 'mistyrose', 'royalblue', 'mediumaquamarine', 'mediumvioletred', 'lightgray', 'olive', 'aqua', 'navy', 'peru', 'whitesmoke', 'red', 'lawngreen', 'gold', 'silver', 'lightskyblue', 'forestgreen', 'thistle', 'green', 'tomato', 'beige', 'mediumblue', 'chocolate', 'darkgray', 'dimgray', 'limegreen', 'lightpink', 'burlywood', 'plum', 'oldlace', 'darkturquoise', 'violet', 'skyblue', 'darkgoldenrod', 'snow', 'teal', 'blueviolet', 'ivory', 'saddlebrown', 'palegoldenrod', 'lightgrey', 'darkorange', 'lightcyan', 'yellow', 'linen', 'slategrey', 'bisque', 'papayawhip', 'sandybrown', 'springgreen', 'palegreen', 'lightseagreen', 'lightslategrey', 'darkgrey', 'lightyellow', 'aquamarine', 'seagreen', 'lightblue', 'slategray', 'mediumpurple', 'seashell', 'darkblue', 'tan', 'greenyellow', 'white', 'antiquewhite', 'cornflowerblue', 'navajowhite', 'moccasin', 'indigo' // hell yes i actually typed this out, but I'm sure you'll be happy to know my recovery is going well.\n];\n\nvar app = app || {};\n\n(function() {\n\n    'use strict';\n\n    app.TerminalModel = function() {};\n\n    app.TerminalModel.prototype.formatTerminalCommand = function(terminalCommand) {\n        \n        var command = {\n                command: null,\n                option: null,\n                modifier: null\n            },\n            commandParse = terminalCommand.split(\" \");\n\n        command.command = commandParse[0];\n\n        if (commandParse[1]) {\n            if (commandParse[1].substring(0,1) == '-') {\n                command.modifier = commandParse[1];\n            } else {\n                command.option = commandParse[1];\n            }\n        }\n\n        if (commandParse[2]) \n            command.modifier = commandParse[2];\n        return command;\n    };\n\n\n    app.TerminalModel.prototype.notAModifier = function(command) {\n        return {\n            message: true, \n            content: '\"' + command.modifier + '\" is not a [modifier] of [' + command.command + ']'\n        };\n    };\n\n\n    app.TerminalModel.prototype.notAnOption = function(command) {\n        return {\n            message: true, \n            content: '\"' + command.option + '\" is not an [option] of command [' + command.command + ']'\n        };\n    };\n\n\n    app.TerminalModel.prototype.notACommand = function(command_, previousCommands_, lastCommand_) {\n        var command = command_;\n        var previousCommands = previousCommands_;\n        var lastCommand = lastCommand_;\n        var notACommandMessage = '\"' + command.command + '\" is not a command. A list of commands can be read by calling \"help\"';\n        return {\n            terminalPreviousCommands: previousCommands.concat( this.terminalLogCommand(lastCommand), {message: true, content: notACommandMessage})\n        };\n    };\n\n\n    app.TerminalModel.prototype.terminalBackgroundColorChange = function(command_, previousCommands_, lastCommand_) {\n        var command = command_;\n        var previousCommands = previousCommands_;\n        var lastCommand = lastCommand_;\n\n        if (!command.option) {\n            return { \n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: false, content: 'an [option] must be passed to execute a background-color change. A list of valid colors can be found by executing \"style -c\".'})\n            };\n        }\n        if (command.option == 'default') {\n            docCookies.setItem('terminalBackgroundColor', 'rgba(0,0,0,.5)');\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalBackgroundColor: 'rgba(0,0,0,.5)'\n            };\n        }\n        if (this.isInArray(command.option, terminalColors)) {\n            docCookies.setItem('terminalBackgroundColor', command.option.toString());\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalBackgroundColor: command.option\n            };\n        } else {\n            var notAValidColorMessage = '\"' + command.option + '\" is not a valid color.';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand),{message: true, template: false, content: notAValidColorMessage }, {template: 'validColors',message: true, content: ''})\n            };\n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandClear = function(command, previousCommands, lastCommand) {\n        if (!command.option && !command.modifier) {\n            return { \n                terminalPreviousCommands: [],\n                terminalPreviousCommandsCount: 0\n            };\n        }\n\n        if (command.option) {\n            return { \n                terminalPreviousCommands: previousCommands.concat( this.terminalLogCommand(lastCommand), {message: true, content: '[clear] does not have any [option]'})\n            };\n        }\n\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h': \n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: 'clearHelp', content: ''})\n                    };\n                    break;\n                default:\n                    return { \n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, content: '[clear] does not have any [modifiers]'}) \n                    };\n            }\n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandHide = function(command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: false, template:'hideHelp', content: ''})\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAnOption(command))\n            };\n        }\n        docCookies.setItem('terminalHidden', true);\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n            terminalHidden: true\n        };\n    };\n\n    app.TerminalModel.prototype.terminalCommandClose = function(command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: false, template:'closeHelp', content: ''})\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAnOption(command))\n            };\n        }\n        docCookies.setItem('terminalClosed', true);\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n            terminalClosed: true\n        };\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandGit = function(command, previousCommands, lastCommand) {\n        if (!command.option && !command.modifier) {\n            window.location = 'https://github.com/ravencole/GDDYN--PORTFOLIO';\n        }\n        if (command.option) {\n            var notAGitCommandOption = '[git] does not accept any options';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: false, content: notAGitCommandOption})\n            };\n        }\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: false, template: 'gitHelp', content: ''})\n                    };\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandGoto = function(command, previousCommands, lastCommand) {\n        var routes           = ['home', 'about', 'gifs', 'map'],\n            minimizeTerminal = false;\n\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: false, template:'gotoHelp', content: ''})\n                    };\n                    break;\n                case '-l':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: false, template:'gotoList', content: ''})\n                    };\n                    break;\n                case '-m':\n                    minimizeTerminal = true;\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n        if (this.isInArray(command.option, routes) && command.option) {\n            if (command.option == 'home') {\n                window.location.pathname = '/';\n                if (minimizeTerminal) {\n                    docCookies.setItem('terminalHidden', true);\n                    return { terminalHidden: true };\n                }\n                return;  \n            }\n            if (minimizeTerminal) {\n                docCookies.setItem('terminalHidden', true);\n                window.location.pathname = '/' + command.option;\n                return { terminalHidden: true };\n            }\n            window.location.pathname = '/' + command.option;\n            return;\n        } else {\n            if (command.option) {\n                var notARouteMessage = '\"' + command.option + '\" is not a route. You can get a list of routes by calling \"goto -l\".';\n                return { \n                    terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: false, content: notARouteMessage  })\n                };\n            } else {\n                var requiresAnOptionMessage = '[goto] requires that a valid route [option] be passed. You can get a list of routes by calling \"goto -l\".';\n                return { \n                    terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: false, content: requiresAnOptionMessage  })\n                };\n            }\n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandHelp = function(command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return { \n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: 'helpHelp', content: ''})\n                    };\n                    break;\n                default: \n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAnOption(command))\n            };\n        }\n\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: 'help', content: ''})\n        };\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandName = function(command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: 'nameHelp', content: ''})\n                    };\n                    break;\n                case '--uppercase':\n                    //fallthrough\n                case '-u':\n                    command.option = command.option.toUpperCase();\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n\n        if (command.option) {\n            docCookies.setItem('terminalUserName', command.option);\n            return { \n                terminalUserName: command.option,\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand))\n            };\n        } else {\n            var requiredOptionMessage = '[name] requires that you pass an [option] for your username.';\n            return {\n               terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: false, content: requiredOptionMessage }) \n            };\n        }\n    };\n\n\n\n    app.TerminalModel.prototype.terminalCommandAbout = function(command, previousCommands, lastCommand, currentPath) {\n        if (command.option) {\n            var noOptions = 'the [about] command does not accept any options';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {template: false, message: true, content: noOptions}) \n            };\n        }\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                       terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {template: 'aboutHelp',message: true, content: ''}) \n                    };\n                    break;\n                case '-p':\n                    var formatAboutTemplateName = function(path) {\n                        var path = path.charAt(0).toUpperCase() + path.slice(1);\n                        return 'about' + path;\n                    };\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: formatAboutTemplateName(currentPath), message: true, content: ''}) \n                    };\n                    break;\n                case '-s':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: 'aboutSite', message: true, content: ''}) \n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        } else {\n           return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {template: false, message: true, content: '[about] requires that a [modifier] be passed.'})\n            }; \n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandStyle = function(command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--background':\n                    //fallthrough\n                case '-bg':\n                    return this.terminalBackgroundColorChange(command, previousCommands, lastCommand);\n                    break;\n                case '-c':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {template: 'validColors',message: true, content: ''})\n                    };\n                    break;\n                case '--help':\n                    //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {template: 'styleHelp',message: true, content: ''})\n                    };\n                    break;\n                case '--textcolor':\n                    //fallthrough\n                case '-tc':\n                    return this.terminalTextColorChange(command, previousCommands, lastCommand);\n                    break;\n                default: \n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        } else {\n            return {\n               terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, content: '[style] requires a valid [modifier]'}) \n            }\n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalCommandWatch = function(command, previousCommands, lastCommand) {\n        var animations = ['test'];\n        if (command.option && this.isInArray(command.option, animations)) {\n            var animationTemplate = 'watch' + command.option.substring(0,1).toUpperCase() + command.option.substring(1);\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: animationTemplate, content: ''})\n            };\n        }\n    };\n\n\n    app.TerminalModel.prototype.terminalLogCommand = function(lastCommand) {\n        return { \n            message: false, content: lastCommand \n        };\n    };\n\n\n    app.TerminalModel.prototype.terminalTextColorChange = function(command, previousCommands, lastCommand) {\n        if (!command.option) {\n            return { \n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), {message: true, template: false, content: 'an [option] must be passed to execute a text-color change. A list of valid colors can be found by executing \"style -c\".'})\n            };\n        }\n        if (command.option == 'default') {\n            docCookies.setItem('terminalTextColor', '#00ff00');\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalTextColor: '#00ff00'\n            };\n        }\n        if (this.isInArray(command.option, terminalColors)) {\n            docCookies.setItem('terminalTextColor', command.option);\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalTextColor: command.option\n            };\n        } else {\n            var notAValidColorMessage = '\"' + command.option + '\" is not a valid color.';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand),{message: true, template: false, content: notAValidColorMessage }, {template: 'validColors',message: true, content: ''})\n            };\n        }\n    };\n\n\n    app.TerminalModel.prototype.isInArray = function(needle, haystack) {\n        var found = false;\n        for (var i = haystack.length - 1; i >= 0; i--) {\n            if (haystack[i] == needle) {\n                found = true;\n            }\n        };\n        return found;\n    };\n\n\n})();\n\n\n\n\n\n\n\n\n\n","var Terminal = React.createClass({\n    getInitialState: function() {\n        var getTerminalHiddenCookie     = docCookies.getItem('terminalHidden'),\n            getVisited                  = docCookies.getItem('visited'),\n            getTerminalUserName         = docCookies.getItem('terminalUserName'),\n            getTerminalTextColor        = docCookies.getItem('terminalTextColor'),\n            getTerminalBackgroundColor  = docCookies.getItem('terminalBackgroundColor'),\n            pathName                    = window.location.pathname === '/' ? 'home' : window.location.pathname.substring(1);\n\n        return {\n            currentURIPath: pathName,\n            terminalClosed: false,\n            terminalHidden:  getTerminalHiddenCookie ? JSON.parse(getTerminalHiddenCookie) : false,\n            terminalInputText: '',\n            terminalLastCommand: '',\n            terminalPreviousCommands: getVisited ? [{message: true, template: 'watchTest', content: ''}] : [{template: 'welcome', message: true, content: ''}],\n            terminalPreviousCommandsCount: 1,\n            terminalUserName: getTerminalUserName ? getTerminalUserName : 'guest',\n            terminalTextColor: getTerminalTextColor ? getTerminalTextColor : '#00ff00',\n            terminalBackgroundColor: getTerminalBackgroundColor ? getTerminalBackgroundColor : 'rgba(0,0,0,.5)'\n        };\n    },\n    componentDidMount: function() {\n        $(document).keypress(function(e) {\n            if (!$(\":focus\")[0]) {\n                this.handleKeyPress(e);\n            }        \n        }.bind(this));\n        docCookies.setItem('visited', true);\n    },\n    handleKeyPress: function(e) {\n        switch (e.keyCode) {\n            case 116: \n                this.handleTerminalClose();\n                break;\n            case 109:\n                if (this.state.terminalHidden) {\n                    this.handleTerminalExpand();\n                } else {\n                    this.handleTerminalMinimize();\n                }\n                break;\n            default:\n                return;\n        }\n    },\n    handleIteraitThroughTerminalCommands: function() {\n        var previousCommands = this.state.terminalPreviousCommands,\n            commandsCount    = this.state.terminalPreviousCommandsCount;\n\n        if (previousCommands == 0 || previousCommands.length < commandsCount) {\n            return;\n        } else { \n            if (previousCommands[previousCommands.length - commandsCount].message){\n                this.setState({ \n                    terminalPreviousCommandsCount: commandsCount + 2,\n                    terminalInputText: previousCommands[previousCommands.length - commandsCount - 1].content,\n                    terminalLastCommand: previousCommands[previousCommands.length - commandsCount - 1].content\n                });\n            } else {\n                this.setState({ \n                    terminalPreviousCommandsCount: commandsCount + 1,\n                    terminalInputText: previousCommands[previousCommands.length - commandsCount].content,\n                    terminalLastCommand: previousCommands[previousCommands.length - commandsCount].content\n                });\n            }\n        }\n    },\n    handleTerminalClose: function() {\n        this.setState({ terminalClosed: !this.state.terminalClosed });\n    },\n    handleTerminalExpand: function() {\n        this.setState({ terminalHidden: false});\n        docCookies.setItem('terminalHidden', false);\n    },\n    handleTerminalInputSubmit: function(e) {\n        e.preventDefault();\n        this.terminalCommandController(this.props.model.formatTerminalCommand(this.state.terminalInputText));\n    },\n    handleTerminalInputTextChange: function(e) {\n        this.setState({ \n            terminalInputText: e.target.value,\n            terminalLastCommand: e.target.value\n        });\n    },\n    handleTerminalMinimize: function() {\n        this.setState({ terminalHidden: true });\n        docCookies.setItem('terminalHidden', true);\n    },\n    handleTerminalShortCuts: function(e) {\n        var key        = e.keyCode,\n            UP_ARROW   = 38,\n            DOWN_ARROW = 40;\n\n        switch (key) {\n            case UP_ARROW:\n                this.handleIteraitThroughTerminalCommands();\n                break;\n            case DOWN_ARROW:\n                this.setState({ terminalInputText: '', terminalPreviousCommandsCount: 1 });\n                break;\n            default:\n                return;\n        }\n    },\n    terminalCommandController: function(command) {\n        var previousCommands = this.state.terminalPreviousCommands,\n            lastCommand      = this.state.terminalLastCommand;\n\n        this.setState({ \n            terminalInputText: '',\n            terminalPreviousCommandsCount: 1\n        });\n\n        switch (command.command) {\n            case 'about':\n                this.setState(this.props.model.terminalCommandAbout(command, previousCommands, lastCommand, this.state.currentURIPath));\n                break;\n            case 'clear':\n                this.setState(this.props.model.terminalCommandClear(command, previousCommands, lastCommand));\n                break;\n            case 'hide':\n                this.setState(this.props.model.terminalCommandHide(command, previousCommands, lastCommand));\n                break;\n            case 'close':\n                this.setState(this.props.model.terminalCommandClose(command, previousCommands, lastCommand));\n                break;\n            case 'git':\n                this.setState(this.props.model.terminalCommandGit(command, previousCommands, lastCommand));\n                break;\n            case 'goto': \n                this.setState(this.props.model.terminalCommandGoto(command, previousCommands, lastCommand));\n                break;\n            case 'name':\n                this.setState(this.props.model.terminalCommandName(command, previousCommands, lastCommand));\n                break;\n            case 'help':\n                this.setState(this.props.model.terminalCommandHelp(command, previousCommands, lastCommand));\n                break;\n            case 'style':\n                this.setState(this.props.model.terminalCommandStyle(command, previousCommands, lastCommand));\n                break;\n            // case 'watch':\n            //     this.setState(this.props.model.terminalCommandWatch(command, previousCommands, lastCommand));\n            //     break;\n            default:\n                this.setState(this.props.model.notACommand(command, previousCommands, lastCommand));\n                break;\n        }\n    },\n    render: function() {\n        var styles = {\n            terminal: {\n                color: '#00ff00',\n                height: '450px',\n                width: '800px',\n                fontFamily: 'monaco',\n                position: 'fixed',\n                boxSizing: 'border-box',\n                padding: '10px',\n                backgroundColor: this.state.terminalBackgroundColor,\n                borderRadius: '0 0 5px 5px',\n                zIndex: '10',\n                transition: 'all 250ms ease'\n            },\n            terminalVisible: {\n                bottom: '50%',\n                left: '50%',\n                transform: 'translateX(-50%) translateY(50%)',\n                opacity: '1'\n            },\n            terminalHidden: {\n                bottom: '-30px',\n                left: '0',\n                width: '80px',\n                height: '0px',\n                backgroundColor: 'transparent',\n                transform: 'translateY(-50%)'\n            },\n            terminalClosed: {\n                opacity: '0'\n            },\n            terminalTopBar: {\n                position: 'absolute',\n                top: '-30px',\n                left: '0',\n                height: '30px',\n                width: '100%',\n                borderRadius: '10px 10px 0 0',\n                background: 'linear-gradient(to bottom, #efefef 0%,#d8d8d8 80%)',\n                zIndex: '10',\n                borderRadius: '10px 10px 0 0'\n            }\n        };\n        return (\n            <div \n                style={[ \n                    styles.terminal,\n                    this.state.terminalHidden ? styles.terminalHidden : styles.terminalVisible,\n                    this.state.terminalClosed && styles.terminalClosed\n                ]}\n                onKeyDown={this.handleTerminalShortCuts}\n            >\n                <div style={[ styles.terminalTopBar ]}>\n                    <TerminalButtons \n                        handleTerminalClose={this.handleTerminalClose}\n                        handleTerminalExpand={this.handleTerminalExpand}\n                        handleTerminalMinimize={this.handleTerminalMinimize} \n                    />\n                </div>\n                <TerminalInput \n                    ref=\"terminalInputBox\"\n                    terminalTextColor={this.state.terminalTextColor}\n                    terminalHidden={this.state.terminalHidden}\n                    terminalClosed={this.state.terminalClosed}\n                    terminalInputText = {this.state.terminalInputText}\n                    terminalPreviousCommands={this.state.terminalPreviousCommands}\n                    terminalUserName={this.state.terminalUserName}\n                    currentURIPath={this.state.currentURIPath}\n                    handleTerminalInputTextChange={this.handleTerminalInputTextChange}\n                    handleTerminalInputSubmit={this.handleTerminalInputSubmit}\n                    terminalTemplate={this.props.terminalTemplate}\n                />\n            </div>\n        );\n    } \n});\n\nvar model = new app.TerminalModel();\n\nvar terminalTemplate = new app.TerminalTemplateModel();\n\nTerminal = Radium(Terminal);\n\nReactDOM.render(<Terminal className=\"terminal\" model={model} terminalTemplate={terminalTemplate}/>, document.getElementById('terminal'));\n\n\n\n\n\n\n"],"sourceRoot":"/source/"}