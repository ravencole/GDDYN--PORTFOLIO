{"version":3,"sources":["Play.js","Speed.js","Text.js","Color.js","NumberOfImages.js","Submit.js","ToggleSidebar.js","GifsText.js","Sidebar.js","GifsViewer.js","Gifs.js"],"names":[],"mappings":";;AAAA,IAAA,IAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,SAAA,EAAA,cAAA;YACA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,OAAA,GAAA,MAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;ACRA,IAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,wBAAA,EAAA,EAAA;SACA,CAAA;KACA;AACA,iBAAA,EAAA,uBAAA,CAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,YAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,GAAA,EAAA;AACA,gBAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;SACA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,eAAA;YACA;;kBAAA,SAAA,EAAA,wBAAA;;aAEA;YAEA,+BAAA,SAAA,EAAA,sBAAA;AACA,2BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,YAAA;AACA,wBAAA,EAAA,IAAA,CAAA,aAAA,GAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;;ACzBA,IAAA,IAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,gBAAA,EAAA,EAAA;SACA,CAAA;KACA;AACA,gBAAA,EAAA,sBAAA,CAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;KACA;AACA,cAAA,EAAA,sBAAA;AACA,SAAA,CAAA,IAAA,CAAA;AACA,eAAA,EAAA,WAAA;AACA,oBAAA,EAAA,MAAA;AACA,mBAAA,EAAA,CAAA,UAAA,IAAA,EAAA;AACA,oBAAA,CAAA,QAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;AACA,oBAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,CAAA;aACA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;SACA,CAAA,CAAA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,eAAA;YACA;;kBAAA,SAAA,EAAA,wBAAA;;aAEA;YACA,+BAAA,SAAA,EAAA,sBAAA;AACA,2BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,wBAAA,EAAA,IAAA,CAAA,YAAA,GAAA;YACA;;kBAAA,SAAA,EAAA,6CAAA;AACA,2BAAA,EAAA,IAAA,CAAA,UAAA;;aAEA;YAEA,6BAAA,SAAA,EAAA,wCAAA,GAAA;YAEA,+BAAA,IAAA,EAAA,UAAA;AACA,kBAAA,EAAA,IAAA;AACA,uBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,oBAAA,GAAA;YAEA;;kBAAA,SAAA,EAAA,sBAAA;AACA,2BAAA,IAAA;gBACA,gCACA;gBACA;;;;iBAEA;aACA;SACA,CACA;KACA;CACA,CAAA,CAAA;;AAEA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;ACvDA,IAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,iBAAA,EAAA,EAAA;SACA,CAAA;KACA;AACA,eAAA,EAAA,qBAAA,CAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,KAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;KACA;AACA,qBAAA,EAAA,6BAAA;AACA,iBAAA,CAAA,GAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA;SACA;AACA,YAAA,KAAA,GAAA,MAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,CAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,KAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,CAAA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,eAAA;YACA;;kBAAA,SAAA,EAAA,wBAAA;;aAAA;YAEA,+BAAA,SAAA,EAAA,sBAAA;AACA,2BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,wBAAA,EAAA,IAAA,CAAA,WAAA,GAAA;YAEA;;kBAAA,SAAA,EAAA,6CAAA;AACA,2BAAA,EAAA,IAAA,CAAA,iBAAA;;aAEA;YAEA,6BAAA,SAAA,EAAA,wCAAA,GAAA;YAEA,+BAAA,IAAA,EAAA,UAAA;AACA,kBAAA,EAAA,IAAA;AACA,uBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,GAAA;YAEA;;kBAAA,SAAA,EAAA,sBAAA;AACA,2BAAA,IAAA;gBACA,gCACA;gBACA;;;;iBAEA;aACA;SACA,CACA;KACA;CACA,CAAA,CAAA;;AClDA,IAAA,cAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,yBAAA,EAAA,EAAA;SACA,CAAA;KACA;AACA,qBAAA,EAAA,2BAAA,CAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,eAAA;YAEA;;kBAAA,SAAA,EAAA,wBAAA;;aAEA;YAEA,+BAAA,SAAA,EAAA,sBAAA;AACA,oBAAA,EAAA,QAAA;AACA,mBAAA,EAAA,GAAA;AACA,mBAAA,EAAA,KAAA;AACA,2BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,aAAA;AACA,wBAAA,EAAA,IAAA,CAAA,iBAAA,GAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;AC5BA,IAAA,MAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,cAAA;;SAEA,CACA;KACA;CACA,CAAA,CAAA;ACRA,IAAA,WAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CAAA,aAAA,EAAA,SAAA,EAAA,eAAA;YACA,6BAAA,SAAA,EAAA,sBAAA,GAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;AACA,IAAA,WAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CAAA,aAAA,EAAA,SAAA,EAAA,eAAA;YACA,6BAAA,SAAA,EAAA,kBAAA,GAAA;YACA,6BAAA,SAAA,EAAA,kBAAA,GAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;AClBA,IAAA,QAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,UAAA,EAAA,kBAAA;AACA,YAAA,MAAA,GAAA;AACA,qBAAA,EAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA;aACA;AACA,0BAAA,EAAA;AACA,6BAAA,EAAA,WAAA;aACA;SACA,CAAA;AACA,eACA;;cAAA,KAAA,EAAA,CACA,MAAA,CAAA,SAAA,EACA,IAAA,CAAA,KAAA,CAAA,cAAA,IAAA,MAAA,CAAA,cAAA,CACA;AACA,yBAAA,EAAA,kBAAA;YACA,IAAA,CAAA,KAAA,CAAA,WAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;;AAEA,QAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA;;ACrBA,IAAA,OAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,0BAAA,EAAA,IAAA;SACA,CAAA;KACA;AACA,iBAAA,EAAA,yBAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,cAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,EAAA,CAAA,CAAA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,YAAA,iBAAA,CAAA;AACA,YAAA,aAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA;AACA,YAAA,WAAA,GAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA;;AAEA,YAAA,MAAA,GAAA;AACA,6BAAA,EAAA;AACA,0BAAA,EAAA,OAAA;aACA;AACA,mBAAA,EAAA;AACA,uBAAA,EAAA,MAAA;aACA;SACA,CAAA;;AAEA,YAAA,IAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AACA,6BAAA,GAAA,oBAAA,WAAA,IAAA,aAAA,EAAA,IAAA,CAAA,aAAA,GAAA,CAAA;SACA,MAAA;AACA,6BAAA,GAAA,oBAAA,WAAA,IAAA,aAAA,EAAA,IAAA,CAAA,aAAA,GAAA,CAAA;SACA;;AAEA,eACA;;cAAA,KAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,GAAA,WAAA,GAAA,aAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,IAAA,MAAA,CAAA,iBAAA,CAAA,EAAA,SAAA,EAAA,SAAA;YACA,iBAAA;YACA;;kBAAA,SAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,IAAA,MAAA,CAAA,OAAA,CAAA;gBACA;;sBAAA,SAAA,EAAA,iBAAA;;iBAEA;gBACA,oBAAA,IAAA;AACA,wBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,oCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,GAAA;gBACA,oBAAA,KAAA;AACA,yBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,qCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,iBAAA,GAAA;gBACA,oBAAA,IAAA;AACA,+BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,kCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,cAAA;AACA,qCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,iBAAA;AACA,wCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,oBAAA,GAAA;gBACA,oBAAA,KAAA;AACA,wBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,6BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA;AACA,yCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,qBAAA;AACA,2CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,GAAA;gBACA,oBAAA,cAAA;AACA,+BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,2CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,GAAA;aACA;SACA,CACA;KACA;CACA,CAAA,CAAA;;;;AAIA,OAAA,GAAA,MAAA,CAAA,OAAA,CAAA,CAAA;;AChEA,IAAA,UAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,mBAAA,EAAA,CAAA;AACA,wBAAA,EAAA,IAAA;SACA,CAAA;KACA;AACA,qBAAA,EAAA,6BAAA;AACA,YAAA,CAAA,cAAA,GAAA,WAAA,CAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA;KACA;AACA,eAAA,EAAA,uBAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,OAAA,IAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA;AACA,gBAAA,CAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA;SACA,MAAA;AACA,gBAAA,CAAA,QAAA,CAAA,EAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CAAA,OAAA,GAAA,CAAA,EAAA,CAAA,CAAA;SACA;KACA;AACA,aAAA,EAAA,qBAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA;AACA,gBAAA,CAAA,WAAA,EAAA,CAAA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,IAAA,CAAA,KAAA,CAAA,YAAA,EAAA;AACA,6BAAA,CAAA,IAAA,CAAA,cAAA,CAAA,CAAA;AACA,oBAAA,CAAA,cAAA,GAAA,WAAA,CAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA;AACA,oBAAA,CAAA,QAAA,CAAA,EAAA,YAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAA;aACA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,iBAAA,EAAA;AACA,oBAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,CAAA;aACA;SACA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,YAAA;YAEA;;kBAAA,SAAA,EAAA,4BAAA;gBAEA,6BAAA,SAAA,EAAA,mBAAA;AACA,0BAAA,EAAA,OAAA;AACA,uBAAA,EAAA,iBAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA;gBAEA,oBAAA,QAAA,IAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA;AACA,+BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,kCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,cAAA,GAAA;aACA;SACA,CACA;KACA;CACA,CAAA,CAAA;;AC/CA,IAAA,IAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,gBAAA,EAAA,IAAA;AACA,uBAAA,EAAA,QAAA;AACA,qBAAA,EAAA,OAAA;AACA,iBAAA,EAAA,IAAA;AACA,uBAAA,EAAA,EAAA;AACA,kBAAA,EAAA,EAAA;AACA,0BAAA,EAAA,KAAA;AACA,6BAAA,EAAA,KAAA;SACA,CAAA;KACA;AACA,sBAAA,EAAA,8BAAA;AACA,SAAA,CAAA,OAAA,CAAA,SAAA,EAAA,CAAA,UAAA,IAAA,EAAA;AACA,gBAAA,CAAA,QAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,CAAA;SACA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;KACA;AACA,oBAAA,EAAA,4BAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,IAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA;KACA;AACA,qBAAA,EAAA,2BAAA,IAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,CAAA;KACA;AACA,2BAAA,EAAA,mCAAA;AACA,iBAAA,CAAA,GAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA;SACA;AACA,YAAA,KAAA,GAAA,MAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,CAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,CAAA;KACA;AACA,wBAAA,EAAA,gCAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,cAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,EAAA,CAAA,CAAA;KACA;AACA,yBAAA,EAAA,+BAAA,KAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,SAAA,EAAA,KAAA,EAAA,CAAA,CAAA;KACA;AACA,qBAAA,EAAA,2BAAA,KAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,CAAA,CAAA;KACA;AACA,2BAAA,EAAA,iCAAA,WAAA,EAAA;AACA,YAAA,WAAA,GAAA,GAAA,EAAA;AACA,gBAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,GAAA,EAAA,CAAA,CAAA;SACA,MACA;AACA,gBAAA,CAAA,QAAA,CAAA,EAAA,WAAA,EAAA,WAAA,GAAA,CAAA,EAAA,CAAA,CAAA;SACA;AACA,eAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA;KACA;AACA,2BAAA,EAAA,mCAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,CAAA,CAAA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,eACA;;cAAA,SAAA,EAAA,gBAAA;YACA,oBAAA,UAAA,IAAA,WAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,yBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,2BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,oBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,sBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,MAAA;AACA,iCAAA,EAAA,IAAA,CAAA,KAAA,CAAA,iBAAA;AACA,8BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,cAAA;AACA,uCAAA,EAAA,IAAA,CAAA,uBAAA,GAAA;YAEA,oBAAA,OAAA,IAAA,WAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,yBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,oBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,2BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA,uCAAA,EAAA,IAAA,CAAA,uBAAA;AACA,oCAAA,EAAA,IAAA,CAAA,oBAAA;AACA,gCAAA,EAAA,IAAA,CAAA,gBAAA;AACA,iCAAA,EAAA,IAAA,CAAA,iBAAA;AACA,qCAAA,EAAA,IAAA,CAAA,qBAAA;AACA,iCAAA,EAAA,IAAA,CAAA,iBAAA;AACA,uCAAA,EAAA,IAAA,CAAA,uBAAA,GAAA;SACA,CACA;KACA;CACA,CAAA,CAAA;;AAEA,QAAA,CAAA,MAAA,CAAA,oBAAA,IAAA,OAAA,EAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAAA,CAAA","file":"gifs.js","sourcesContent":["var Play = React.createClass({\n    render: function() {\n        return (\n            <div onClick={this.props.handlePlayToggle} className=\"sidebar--btn\">\n                {this.props.play ? 'pause' : 'play'}\n            </div>\n        );\n    } \n});","var Speed = React.createClass({\n    getInitialState: function() {\n        return {\n            currentSpeed: ''\n        };\n    },\n    onSpeedChange: function(e) {\n        this.setState({ currentSpeed: e.target.value });\n        if (e.target.value > 249) {\n            this.props.handleSpeedChange(e.target.value);\n        }\n    },\n    render: function() {\n        return (\n            <div className=\"sidebar--form\">\n                <div className=\"sidebar--form__heading\">\n                    speed\n                </div>\n                \n                <input className=\"sidebar--form__input\" \n                       placeholder={this.props.speed} \n                       value={this.state.currentSpeed} \n                       onChange={this.onSpeedChange}/>\n            </div>\n        );\n    } \n});","\nvar Text = React.createClass({\n    getInitialState: function() {\n        return {\n            text: ''\n        };\n    },\n    onTextChange: function(e) {\n        this.setState({ text: e.target.value });\n        this.props.handlePictureText(e.target.value);\n    },\n    randomLine: function() {\n        $.ajax({\n            url: '/randommm',\n            dataType: 'json',\n            success: function(data) {\n                this.setState({text: data});\n                this.props.handlePictureText(data);\n            }.bind(this)\n        });\n    },\n    render: function() {\n        return (\n            <form className=\"sidebar--form\">\n                <div className=\"sidebar--form__heading\">\n                    text\n                </div>\n                <input className=\"sidebar--form__input\" \n                       placeholder={this.props.pictureText} \n                       value={this.state.text}\n                       onChange={this.onTextChange} /> \n                <div className=\"sidebar--form__label sidebar--form__request\" \n                       onClick={this.randomLine}>\n                            let me get a random mm line\n                </div>    \n\n                <div className=\"sidebar--form__hr sidebar--form__label\"></div>\n\n                <input type=\"checkbox\" \n                       id=\"c2\" \n                       onClick={this.props.handleCapatalizeText}/>\n\n                <label className=\"sidebar--form__label\" \n                       for=\"c2\" >\n                    <div>\n                    </div>\n                    <div>\n                        CAPS, please.\n                    </div>\n                </label>\n            </form>\n        );\n    }     \n});\n\nText = Radium(Text);\n\n\n\n\n\n\n\n\n","var Color = React.createClass({\n    getInitialState: function() {\n        return {\n            color: ''\n        };\n    },\n    colorChange: function(e) {\n        this.setState({ color: e.target.value });\n        this.props.handleTextColorChange(e.target.value);\n    },\n    handleRandomColor: function() {\n        function c() {\n            return Math.floor(Math.random()*256);\n        }\n        var color = \"rgb(\"+c()+\",\"+c()+\",\"+c()+\")\";\n        this.setState({ color: color });\n        this.props.handleTextColorChange(color);\n    },\n    render: function() {\n        return (\n            <div className=\"sidebar--form\">\n                <div className=\"sidebar--form__heading\">color</div>\n\n                <input className=\"sidebar--form__input\" \n                       placeholder={this.props.textColor} \n                       value={this.state.color} \n                       onChange={this.colorChange}/>\n\n                <div className=\"sidebar--form__label sidebar--form__request\" \n                     onClick={this.handleRandomColor}>\n                        also, im gonna need a random color.\n                </div>\n\n                <div className=\"sidebar--form__hr sidebar--form__label\"></div>\n\n                <input type=\"checkbox\" \n                       id=\"c1\" \n                       onClick={this.props.toggleAlwaysRandomColor}/>\n\n                <label className=\"sidebar--form__label\" \n                       for=\"c1\" >\n                    <div>\n                    </div>\n                    <div>\n                        no, like evey time.\n                    </div>\n                </label>\n            </div>\n        );\n    } \n});\n","var NumberOfImages = React.createClass({\n    getInitialState: function() {\n        return {\n            currentImages: ''\n        };\n    },\n    numOfImagesChange: function(e) {\n        this.setState({ currentImages: e.target.value });\n        this.props.handleNumOfImagesChange(e.target.value);\n    },\n    render: function() {\n        return (\n            <div className=\"sidebar--form\">\n            \n                <div className=\"sidebar--form__heading\">\n                    number of images\n                </div>\n\n                <input className=\"sidebar--form__input\"\n                       type=\"number\" \n                       min=\"1\" \n                       max=\"150\" \n                       placeholder={this.props.numOfImages} \n                       value={this.state.currentImages} \n                       onChange={this.numOfImagesChange}/>\n            </div>\n        );\n    } \n});","var Submit = React.createClass({\n    render: function() {\n        return (\n            <div className=\"sidebar--btn\">\n                submit\n            </div>\n        );\n    } \n});","var ShowSidebar = React.createClass({\n    render: function() {\n        return (\n            <div onClick={this.props.toggleSidebar} className=\"sidebar--hide\">\n                <div className=\"sidebar--hide__arrow\"></div>\n            </div>\n        );\n    } \n});\nvar HideSidebar = React.createClass({\n    render: function() {\n        return (\n            <div onClick={this.props.toggleSidebar} className=\"sidebar--hide\">\n                <div className=\"sidebar--hide__x\"></div>\n                <div className=\"sidebar--hide__x\"></div>\n            </div>\n        );\n    } \n});","var GifsText = React.createClass({\n    render: function() {\n        var styles = {\n            textColor: {\n                color: this.props.textColor,\n            },\n            capatalizeText: {\n                textTransform: 'uppercase'\n            }\n        };\n        return (\n            <div style={[\n                    styles.textColor, \n                    this.props.capatalizeText && styles.capatalizeText\n                 ]} \n                 className=\"gifsviewer--text\">\n                    {this.props.pictureText}\n            </div>\n        );\n    } \n});\n\nGifsText = Radium(GifsText);","\nvar Sidebar = React.createClass({\n    getInitialState: function() {\n        return {\n            sidebarVisible: true,\n        };\n    },\n    toggleSidebar: function() {\n        this.setState({ sidebarVisible: ! this.state.sidebarVisible });\n    },\n    render: function() {\n        var sidebarVisibility;\n        var sidebarClosed = { width: 0 };\n        var sidebarOpen = { outline: 0 };\n\n        var styles = {\n            sidebarNotVisible: {\n                background: 'black'\n            },\n            visible: {\n                display: 'none'\n            }\n        };\n\n        if (this.state.sidebarVisible) {\n            sidebarVisibility = <HideSidebar toggleSidebar={this.toggleSidebar} />;\n        } else {\n            sidebarVisibility = <ShowSidebar toggleSidebar={this.toggleSidebar} />;\n        }\n\n        return (\n            <div style={[this.state.sidebarVisible ? sidebarOpen : sidebarClosed, ! this.state.sidebarVisible && styles.sidebarNotVisible]} className=\"sidebar\">\n                {sidebarVisibility}\n                <div className=\"sidebar--container\" style={[! this.state.sidebarVisible && styles.visible]}>\n                    <div className=\"sidebar--header\">\n                        contemporary art gifs\n                    </div>\n                    <Play \n                        play={this.props.play} \n                        handlePlayToggle={this.props.handlePlayToggle} />\n                    <Speed \n                        speed={this.props.speed}\n                        handleSpeedChange={this.props.handleSpeedChange} />\n                    <Text \n                        pictureText={this.props.pictureText}\n                        capatalizeText={this.props.capatalizeText}\n                        handlePictureText={this.props.handlePictureText} \n                        handleCapatalizeText={this.props.handleCapatalizeText}/>\n                    <Color \n                        play={this.props.play} \n                        textColor={this.props.textColor}\n                        handleTextColorChange={this.props.handleTextColorChange}\n                        toggleAlwaysRandomColor={this.props.toggleAlwaysRandomColor} />\n                    <NumberOfImages \n                        numOfImages={this.props.numOfImages} \n                        handleNumOfImagesChange={this.props.handleNumOfImagesChange} />\n                </div>\n            </div>\n        );\n    } \n});\n\n// <Submit />\n\nSidebar = Radium(Sidebar);\n\n\n\n\n\n\n\n","var GifsViewer = React.createClass({\n    getInitialState: function() {\n        return {\n            imageID: 0,\n            currentSpeed: 1000 \n        };\n    },\n    componentDidMount: function() {\n        this.imageIteration = setInterval(this.isPlaying, this.props.speed);\n    },\n    imageChange: function() {\n        if (this.state.imageID >= this.props.numOfImages) {\n            this.setState({ imageID: 0 });\n        } else {\n            this.setState({ imageID: this.state.imageID + 1 });\n        }\n    },\n    isPlaying: function() {\n        if (this.props.play) {\n            this.imageChange();\n            if (this.props.speed != this.state.currentSpeed) {\n                clearInterval(this.imageIteration);\n                this.imageIteration = setInterval(this.isPlaying, this.props.speed);\n                this.setState({ currentSpeed: this.props.speed });\n            }\n            if (this.props.alwaysRandomColor) {\n                this.props.handleAlwaysRandomColor();\n            }\n        }\n    },\n    render: function() {\n        return (\n            <div className=\"gifsviewer\">\n\n                <div className=\"gifsviewer--imagecontainer\">\n\n                    <img className=\"gifsviewer--image\" \n                        height=\"450px\" \n                        src={'/images/cadads/'+this.props.cadads[this.state.imageID]} />\n\n                    <GifsText textColor={this.props.textColor} \n                              pictureText={this.props.pictureText}\n                              capatalizeText={this.props.capatalizeText} /> \n                </div>\n            </div>\n        );\n    } \n});\n\n\n\n\n\n","var Gifs = React.createClass({\n    getInitialState: function() {\n        return {\n            play: true,\n            pictureText: 'CADADS',\n            textColor: 'white',\n            speed: 1000,\n            numOfImages: 20,\n            cadads: [], \n            capatalizeText: false,\n            alwaysRandomColor: false\n        };\n    },\n    componentWillMount: function() {\n        $.getJSON( \"/cadads\", function(data) {\n            this.setState({ cadads: data });\n        }.bind(this));\n    },\n    handlePlayToggle: function() {\n        this.setState({ play: ! this.state.play });\n    },\n    handlePictureText: function(text) {\n        this.setState({ pictureText: text });\n    },\n    handleAlwaysRandomColor: function() {\n        function c() {\n            return Math.floor(Math.random()*256);\n        }\n        var color = \"rgb(\"+c()+\",\"+c()+\",\"+c()+\")\";\n        this.setState({ color: color });\n        this.handleTextColorChange(color);\n    },\n    handleCapatalizeText: function() {\n        this.setState({ capatalizeText: ! this.state.capatalizeText });\n    },\n    handleTextColorChange: function(color) {\n        this.setState({ textColor: color });\n    },\n    handleSpeedChange: function(speed) {\n        this.setState({ speed: speed });\n    },\n    handleNumOfImagesChange: function(numOfImages) {\n        if (numOfImages > 120) {\n            this.setState({ numOfImages: 120});\n        }\n        else {\n            this.setState({ numOfImages: numOfImages - 1});\n        }\n        console.log(this.state.numOfImages);\n    },\n    toggleAlwaysRandomColor: function() {\n        this.setState({ alwaysRandomColor: ! this.state.alwaysRandomColor });\n    },\n    render: function() {\n        return (\n            <div className=\"gifs-container\">\n                <GifsViewer pictureText             ={this.state.pictureText}\n                            textColor               ={this.state.textColor}\n                            speed                   ={this.state.speed}\n                            numOfImages             ={this.state.numOfImages}\n                            play                    ={this.state.play}\n                            cadads                  ={this.state.cadads}\n                            alwaysRandomColor       ={this.state.alwaysRandomColor}\n                            capatalizeText          ={this.state.capatalizeText}\n                            handleAlwaysRandomColor = {this.handleAlwaysRandomColor}/>\n\n                <Sidebar    pictureText             ={this.state.pictureText} \n                            textColor               ={this.state.textColor}\n                            speed                   ={this.state.speed}\n                            play                    ={this.state.play}\n                            numOfImages             ={this.state.numOfImages}\n                            toggleAlwaysRandomColor ={this.toggleAlwaysRandomColor}\n                            handleCapatalizeText    ={this.handleCapatalizeText}\n                            handlePlayToggle        ={this.handlePlayToggle} \n                            handlePictureText       ={this.handlePictureText}\n                            handleTextColorChange   ={this.handleTextColorChange}\n                            handleSpeedChange       ={this.handleSpeedChange}\n                            handleNumOfImagesChange ={this.handleNumOfImagesChange} />\n            </div>\n        );\n    } \n});\n\nReactDOM.render(<Gifs />, document.getElementById('gifs'));\n"],"sourceRoot":"/source/"}