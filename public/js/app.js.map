{"version":3,"sources":["nav.js","terminal.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtfile":"app.js","sourcesContent":["/*\nnav drops down at 30px from the top of the window,\nand sides back up once the mouse is more than 100px from the top\n*/\n\n(function() {\n    var open = false;\n    $( document ).mousemove(function(e) {\n        if (!open && e.pageY < 60) {\n            $('#nav').slideDown(500).css('display', 'flex');\n            open = true;\n            return;\n        }\n        if (open && e.pageY > 100) {\n            $('#nav').slideUp(500);\n            open = false;\n        }\n    });\n})();\n\n\n\n","'use strict';\n\nvar TerminalButtons = React.createClass({\n    displayName: 'TerminalButtons',\n\n    render: function render() {\n        var styles = {\n            terminalButtonContainer: {\n                height: '100%',\n                width: '100%',\n                position: 'relative'\n            },\n            terminalButton: {\n                height: '12px',\n                width: '12px',\n                borderRadius: '50%',\n                position: 'absolute',\n                top: '10px'\n            },\n            terminalButtonClose: {\n                left: '10px',\n                backgroundColor: 'tomato'\n            },\n            terminalButtonMinimize: {\n                left: '32px',\n                backgroundColor: 'gold'\n            },\n            terminalButtonExpand: {\n                left: '54px',\n                backgroundColor: 'limegreen'\n            }\n        }; // Hover styles got put into the terminal.scss file for now\n        return React.createElement(\n            'div',\n            { style: [styles.terminalButtonContainer] },\n            React.createElement('div', {\n                className: 'terminal--button',\n                onClick: this.props.handleTerminalClose,\n                style: [styles.terminalButton, styles.terminalButtonClose]\n            }),\n            React.createElement('div', {\n                className: 'terminal--button',\n                onClick: this.props.handleTerminalMinimize,\n                style: [styles.terminalButton, styles.terminalButtonMinimize]\n            }),\n            React.createElement('div', {\n                className: 'terminal--button',\n                onClick: this.props.handleTerminalExpand,\n                style: [styles.terminalButton, styles.terminalButtonExpand]\n            })\n        );\n    }\n});\n\nTerminalButtons = Radium(TerminalButtons);\n\nvar TerminalInput = React.createClass({\n    displayName: 'TerminalInput',\n\n    componentDidUpdate: function componentDidUpdate() {\n        this.terminalTextBox.scrollTop = this.terminalTextBox.scrollHeight;\n    },\n    focusInput: function focusInput() {\n        this.refs.terminalInput.focus();\n    },\n    render: function render() {\n        var _this = this;\n\n        var displayPreviousTerminalCommands = this.props.terminalPreviousCommands.map(function (command) {\n            var styles = {\n                terminalMessageText: {\n                    color: '#00ff00',\n                    backgroundColor: 'deeppink'\n                }\n            };\n            if (!command.message && !command.template) {\n                return React.createElement(\n                    'div',\n                    null,\n                    'gddynytdtlls.com:',\n                    this.props.currentURIPath,\n                    ' ',\n                    this.props.terminalUserName,\n                    '$ ',\n                    command.content\n                );\n            } else if (command.template) {\n                switch (command.template) {\n                    case 'aboutAbout':\n                        return this.props.terminalTemplate.aboutAbout();\n                    case 'aboutGifs':\n                        return this.props.terminalTemplate.aboutGifs();\n                    case 'aboutHelp':\n                        return this.props.terminalTemplate.aboutHelp();\n                    case 'aboutHome':\n                        return this.props.terminalTemplate.aboutHome();\n                    case 'aboutSite':\n                        return this.props.terminalTemplate.aboutSite();\n                    case 'clearHelp':\n                        return this.props.terminalTemplate.clearHelp();\n                    case 'closeHelp':\n                        return this.props.terminalTemplate.closeHelp();\n                    case 'gitHelp':\n                        return this.props.terminalTemplate.gitHelp();\n                    case 'gotoHelp':\n                        return this.props.terminalTemplate.gotoHelp();\n                    case 'gotoList':\n                        return this.props.terminalTemplate.gotoList();\n                    case 'help':\n                        return this.props.terminalTemplate.help();\n                    case 'helpHelp':\n                        return this.props.terminalTemplate.helpHelp();\n                    case 'hideHelp':\n                        return this.props.terminalTemplate.hideHelp();\n                    case 'nameHelp':\n                        return this.props.terminalTemplate.nameHelp();\n                    case 'styleHelp':\n                        return this.props.terminalTemplate.styleHelp();\n                    case 'validColors':\n                        return this.props.terminalTemplate.validColors();\n                    // case 'watchTest':\n                    //     return this.props.terminalTemplate.watchTest();\n                    case 'welcome':\n                        return this.props.terminalTemplate.welcome();\n                    default:\n                        console.log('add the template to terminalInput, dude');\n                        return;\n                }\n            } else {\n                return React.createElement(\n                    'div',\n                    null,\n                    React.createElement(\n                        'div',\n                        { style: styles.terminalMessageText },\n                        command.content\n                    )\n                );\n            }\n        }, this);\n\n        var styles = {\n            terminalForm: {\n                display: 'flex',\n                width: '100%',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n            },\n            terminalHidden: {\n                display: 'none'\n            },\n            terminalInput: {\n                flexGrow: '1',\n                height: '12px',\n                backgroundColor: 'transparent'\n            },\n            terminalInputName: {\n                marginRight: '4px'\n            },\n            terminalText: {\n                fontFamily: 'monaco',\n                color: this.props.terminalTextColor,\n                fontSize: '12px'\n            },\n            terminalMessageText: {\n                color: 'pink'\n            },\n            terminalTextBox: {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                width: '100%',\n                height: '100%',\n                padding: '10px',\n                overflow: 'scroll',\n                boxSizing: 'border-box'\n            }\n        };\n\n        return React.createElement(\n            'div',\n            {\n                style: [styles.terminalText, styles.terminalTextBox, this.props.terminalHidden && styles.terminalHidden, this.props.terminalClosed && styles.terminalHidden],\n                ref: function (ref) {\n                    return _this.terminalTextBox = ref;\n                }\n            },\n            displayPreviousTerminalCommands,\n            React.createElement(\n                'form',\n                {\n                    onSubmit: this.props.handleTerminalInputSubmit,\n                    style: [styles.terminalForm]\n                },\n                React.createElement(\n                    'div',\n                    { style: [styles.terminalInputName] },\n                    'gddynytdtlls.com:',\n                    this.props.currentURIPath,\n                    ' ',\n                    this.props.terminalUserName,\n                    '$'\n                ),\n                React.createElement('input', {\n                    autoFocus: true,\n                    onChange: this.props.handleTerminalInputTextChange,\n                    style: [styles.terminalInput, styles.terminalText],\n                    value: this.props.terminalInputText,\n                    ref: 'terminalInput'\n                })\n            )\n        );\n    }\n});\n\nTerminalInput = Radium(TerminalInput);\nvar app = app || {};\n\n(function () {\n\n    'use strict';\n\n    app.TerminalTemplateModel = function () {};\n\n    app.TerminalTemplateModel.prototype.clearHelp = function () {\n        var styles = {\n            clear: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            clearHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            clearBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.clear },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.clearHeading },\n                    'Clear:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.clearBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [clear] command is going to clear your command and message history from the terminal.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'other than the default [-h]/[--help] modifiers, [clear] accepts no [options] or [modifiers].'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [clear] eg. clear'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.aboutAbout = function () {\n        var styles = {\n            aboutAbout: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            aboutAboutHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            aboutAboutBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '0px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.aboutAbout },\n            React.createElement(\n                'div',\n                { style: styles.aboutAboutBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    \"<----about---->\"\n                ),\n                React.createElement('img', { height: '350px', src: '/images/metaPug.jpg' }),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'as far as reading about the about page,'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'it isn\\'t a lot different than this.'\n                )\n            )\n        ); //'\n    };\n\n    app.TerminalTemplateModel.prototype.aboutHome = function () {\n        var styles = {\n            aboutHome: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutHomeHeading: {\n                color: 'white'\n            },\n            aboutHomeBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.aboutHome },\n            React.createElement(\n                'div',\n                { style: styles.aboutHomeBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    \"<----home---->\"\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'video of an anonymous person trying not to blow a gasket.'\n                )\n            )\n        ); //'\n    };\n\n    app.TerminalTemplateModel.prototype.aboutGifs = function () {\n        var styles = {\n            aboutGifs: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutGifsHeading: {\n                color: 'white'\n            },\n            aboutGifsBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.aboutGifs },\n            React.createElement(\n                'div',\n                { style: styles.aboutGifsBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    \"<----contemporary art gifs---->\"\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'this is where the good writing goes.'\n                )\n            )\n        ); //'\n    };\n\n    app.TerminalTemplateModel.prototype.aboutSite = function () {\n        var styles = {\n            aboutGifs: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutGifsHeading: {\n                color: 'white'\n            },\n            aboutGifsBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.aboutGifs },\n            React.createElement(\n                'div',\n                { style: styles.aboutGifsBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'About the Site:'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'gotta write about it man.'\n                )\n            )\n        ); //'\n    };\n\n    app.TerminalTemplateModel.prototype.aboutMap = function () {\n        var styles = {\n            aboutGifs: {\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '10px 0 5px 0'\n            },\n            heading: {\n                height: '20px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                margin: '0'\n            },\n            aboutGifsHeading: {\n                color: 'white'\n            },\n            aboutGifsBody: {\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.aboutGifs },\n            React.createElement(\n                'div',\n                { style: styles.aboutGifsBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    \"<----map---->\"\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'this page is kind of a mess whether you\\'re looking at the content or the implementation.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'initially I started programming because I was interested in the ratio of putting work into a project veruses getting work back out of it.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'when I got out of school I started working in cabinet shops.'\n                ),\n                React.createElement('div', { style: styles.bodyElements }),\n                React.createElement('div', { style: styles.bodyElements }),\n                React.createElement('div', { style: styles.bodyElements }),\n                React.createElement('div', { style: styles.bodyElements })\n            )\n        ); //'\n    };\n\n    app.TerminalTemplateModel.prototype.closeHelp = function () {\n        var styles = {\n            close: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            closeHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            closeBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.close },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.closeHeading },\n                    'Close:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.closeBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [close] command is going to close the Terminal. It can be brought back by pressing the \\'t\\' key on your keyboard. it performs the same action as clicking the red button on the terminal toolbar.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'other than the default [-h]/[--help] modifiers, [close] accepts no [options] or [modifiers]'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [close] eg. close'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.aboutHelp = function () {\n        var styles = {\n            about: {\n                height: '215px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            aboutHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            aboutBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.about },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.aboutHeading },\n                    'About:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.aboutBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [about] command will tell you information about either the page you\\'re currently on or the site as a whole, depending on the [modifier] that is passed.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    '[about] accepts no [options].'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'with the exception of [-h]/[--help], [about] accepts two modifiers:'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginTop: '10px' }] },\n                    '[-p]: displays information about the page you are currently on.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginBottom: '15px' }] },\n                    '[-s]: displays information about the entire site.'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [about] [modifier] eg. about -p'\n                )\n            )\n        ); //'\n    };\n\n    app.TerminalTemplateModel.prototype.gitHelp = function () {\n        var styles = {\n            gitHelp: {\n                height: '125px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            gitHelpHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            gitHelpBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.gitHelp },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.gitHelpHeading },\n                    'Git:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.gitHelpBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [git] command will leave gddynytdtlls.com and redirect to the source code hosted on GitHub.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'with the exception of [-h]/[--help], [git] accepts no [modifier]s or [options].'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [git] eg. git'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.gotoHelp = function () {\n        var styles = {\n            goto: {\n                height: '170px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            gotoHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            gotoBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.goto },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.gotoHeading },\n                    'Goto:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.gotoBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [goto] command is used to navigate to other pages on the site via the terminal.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'with the exception of [-h]/[--help], [goto] accepts two modifiers, [-l] and [-m].'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginTop: '10px' }] },\n                    '[-l]: displays a list of all avaliable routes.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginBottom: '15px' }] },\n                    '[-m]: opens the new webpage with the terminal minimized.'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [goto] [option] [modifier] eg. goto gifs -m'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.gotoList = function () {\n        var styles = {\n            goto: {\n                height: '140px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            gotoHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            gotoBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '25px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.goto },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.gotoHeading },\n                    'Route List:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.gotoBody },\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent] },\n                    'about - contact info and me at the gallery or club ---------------------'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent] },\n                    'gifs -- make some contemporary art gifs --------------------------------'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent] },\n                    'home -- really there isn\\'t much here except the intro video ------------'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent] },\n                    'map --- look at photographs with their coordinates plotted on a map ----'\n                )\n            )\n        );\n        //'\n    };\n\n    app.TerminalTemplateModel.prototype.helpHelp = function () {\n        var styles = {\n            help: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            helpHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            helpBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.help },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.helpHeading },\n                    'Help:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.helpBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [help] command is going to give you a directory of commands you can call.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'other than the default [-h]/[--help] modifiers, [help] accepts no [options] or [modifiers]'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [help] eg. help'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.nameHelp = function () {\n        var styles = {\n            name: {\n                height: '160px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            nameHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            nameBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.name },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.nameHeading },\n                    'Name:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.nameBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [name] command is used to set your username. (NO SPACES ALLOWED).'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'with the exception of [-h]/[--help], [name] accepts one modifier:'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginTop: '10px', marginBottom: '15px' }] },\n                    '[-u]: transforms the [option] you pass for your username to CAPS.'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [name] [option] [modifier] eg. name free_willy_free$tyle -u'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.hideHelp = function () {\n        var styles = {\n            hide: {\n                height: '130px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                margin: '5px 0'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            hideHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            hideBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.hide },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.hideHeading },\n                    'Hide:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.hideBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [hide] command is going to minimize the Terminal. It does the same thing as clicking the yellow button on the terminal toolbar. You can expand the terminal by clicking the green button on the terminal toolbar, or my pressing the \\'m\\' key on your keyboard.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'other than the default [-h]/[--help] modifiers, [hide] accepts no [options] or [modifiers]'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [hide] eg. hide'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.help = function () {\n        var styles = {\n            helpContainer: {\n                height: '325px',\n                marginTop: '10px',\n                marginBottom: '5px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                flexDirection: 'column'\n            },\n            helpHeading: {\n                height: '20%',\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '40px',\n                letterSpacing: '.5em'\n            },\n            helpHeadingText: {\n                padding: '0px .5em',\n                border: '5px dotted #00ff00'\n            },\n            helpBody: {\n                height: '80%',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            },\n            helpBodySection: {\n                height: '100%',\n                flex: '1'\n            },\n            commandsHeading: {},\n            commandsList: {\n                flex: '1',\n                boxSizing: 'border-box',\n                paddingLeft: '130px',\n                marginBottom: '5px'\n            },\n            commandsListText: {\n                color: 'white',\n                backgroundColor: 'deeppink',\n                padding: '0 30px 0 0'\n            },\n            infoSection: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                paddingRight: '60px',\n                boxSizing: 'border-box'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.helpContainer },\n            React.createElement(\n                'div',\n                { style: styles.helpHeading },\n                React.createElement(\n                    'div',\n                    { style: styles.helpHeadingText },\n                    'HELP MEN',\n                    React.createElement(\n                        'span',\n                        { style: { letterSpacing: '0' } },\n                        'U'\n                    )\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.helpBody },\n                React.createElement(\n                    'div',\n                    { style: [styles.helpBodySection] },\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsHeading },\n                        'List of Commands:'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'about --- [-s][-p] -------------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'clear --- [no modifiers] -------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'close --- [no modifiers] -------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'git ----- [no modifiers] -------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'goto ---- [-l][-m] -------------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'help ---- [no modifiers] -------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'hide ---- [no modifiers] -------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'name ---- [-u] -----------------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'style --- [-tc][-c][-bg] -------'\n                    ),\n                    React.createElement(\n                        'div',\n                        { style: styles.commandsList },\n                        'in addition to these [modifiers], all commands have a help menu that can be accessed by passing the [-h] or [--help] modifier'\n                    )\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.styleHelp = function () {\n        var styles = {\n            styleHelp: {\n                height: '230px',\n                width: '100%',\n                boxSizing: 'border-box',\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                marginTop: '5px'\n            },\n            heading: {\n                height: '40px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center'\n            },\n            styleHelpHeading: {\n                fontSize: '30px',\n                padding: '5px'\n            },\n            styleHelpBody: {\n                height: '80%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column'\n            },\n            bodyElements: {\n                marginBottom: '5px'\n            },\n            indent: {\n                paddingLeft: '10px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.styleHelp },\n            React.createElement(\n                'div',\n                { style: styles.heading },\n                React.createElement(\n                    'div',\n                    { style: styles.styleHelpHeading },\n                    'Style:'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.styleHelpBody },\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'the [style] command is used to customize the look of your terminal.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.bodyElements },\n                    'with the exception of [-h]/[--help], [style] accepts three modifiers:'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginTop: '10px' }] },\n                    '[-bg]: allows you to change the background color of the terminal.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent] },\n                    '[-c]: opens a list of valid colors. In addition to the colors on the list, both [-bg] and [-tc] can be passed the \\'default\\' [option], which will render a low opacity black for [-bg], and #00ff00 for [-tc].'\n                ),\n                React.createElement(\n                    'div',\n                    { style: [styles.bodyElements, styles.indent, { marginBottom: '15px' }] },\n                    '[-tc]: allows you to change the font color of the terminal.'\n                ),\n                React.createElement(\n                    'div',\n                    null,\n                    'syntax: [style] [option] [modifier] eg. style deeppink -bg'\n                )\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.validColors = function () {\n        var displayTerminalColors = terminalColors.map(function (color) {\n            if (color === 'indigo') {\n                return React.createElement(\n                    'span',\n                    { style: { color: color } },\n                    React.createElement(\n                        'span',\n                        { style: { color: '#00ff00' } },\n                        'and',\n                        \" \"\n                    ),\n                    color\n                );\n            }\n            return React.createElement(\n                'span',\n                null,\n                React.createElement(\n                    'span',\n                    { style: { color: color } },\n                    color\n                ),\n                ',',\n                \" \"\n            );\n        });\n        var styles = {\n            colorsContainer: {\n                height: '335px',\n                width: '100%'\n            },\n            colorsHeader: {\n                height: '60px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                boxSizing: 'border-box',\n                fontSize: '30px'\n            },\n            colorsBody: {\n                width: '100%',\n                paddingLeft: '20px',\n                boxSizing: 'border-box'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.colorsContainer },\n            React.createElement(\n                'div',\n                { style: styles.colorsHeader },\n                'List of Colors:'\n            ),\n            React.createElement(\n                'div',\n                { style: styles.colorsBody },\n                displayTerminalColors\n            )\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.watchTest = function () {\n        var styles = {\n            test: {\n                height: '95%',\n                width: '100%',\n                color: 'white',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                position: 'relative'\n            },\n            bubble: {\n                position: 'absolute',\n                height: '80px',\n                width: '80px',\n                top: '50%',\n                left: '50%',\n                transition: 'all 1s ease',\n                border: '1px solid rgba(255,255,255,.5)',\n                boxShadow: 'inset 0 0 12px rgba(255,255,255,.5)',\n                borderRadius: '50%'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.test },\n            React.createElement('div', { style: styles.bubble })\n        );\n    };\n\n    app.TerminalTemplateModel.prototype.welcome = function () {\n        var styles = {\n            welcomeContainer: {\n                height: '96%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                flexDirection: 'column',\n                paddingTop: '10px',\n                boxSizing: 'border-box'\n            },\n            welcomeHeading: {\n                height: '13%',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            },\n            welcomeHeadingText: {\n                fontSize: '40px',\n                color: 'white'\n            },\n            welcomeBody: {\n                height: '87%',\n                width: '100%',\n                boxSizing: 'border-box'\n            },\n            welcomeBodyElement: {\n                marginLeft: '20px',\n                marginBottom: '5px'\n            }\n        };\n        return React.createElement(\n            'div',\n            { style: styles.welcomeContainer },\n            React.createElement(\n                'div',\n                { style: styles.welcomeHeading },\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeHeadingText },\n                    'Welcome'\n                )\n            ),\n            React.createElement(\n                'div',\n                { style: styles.welcomeBody },\n                React.createElement(\n                    'div',\n                    { style: { marginBottom: '11px' } },\n                    'this is the gddynytdtlls.com ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        React.createElement(\n                            'i',\n                            null,\n                            'Terminal'\n                        )\n                    ),\n                    '.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'the terminal can be used for ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'navigating'\n                    ),\n                    ' through the site,'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'reading'\n                    ),\n                    ' about the different pages,'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'and ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'watching'\n                    ),\n                    ' animations.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'the terminal can also be ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'styled'\n                    ),\n                    ','\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'minimized'\n                    ),\n                    ', ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'closed'\n                    ),\n                    ', and'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'have a set ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'username'\n                    ),\n                    '.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'However, it\\'s just the vegan gravy on the tofurkey:'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'great that it\\'s here, but what needs to happen'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'can happen without it.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'You can ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'minimize'\n                    ),\n                    ' the terminal by clicking the ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'yellow button'\n                    )\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'on the terminal toolbar, and operate the site like any'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'other site. there\\'s a dropdown nav up top.'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'otherwise, ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'type \\'help\\''\n                    )\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    'to see a ',\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'list'\n                    ),\n                    ' of'\n                ),\n                React.createElement(\n                    'div',\n                    { style: styles.welcomeBodyElement },\n                    React.createElement(\n                        'span',\n                        { style: { color: 'white' } },\n                        'commands'\n                    ),\n                    '.'\n                )\n            )\n        ); //'\n    };\n})();\n\nvar docCookies = {\n    getItem: function getItem(sKey) {\n        if (!sKey) {\n            return null;\n        }\n        return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n    },\n    setItem: function setItem(sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n        if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n            return false;\n        }\n        var sExpires = \"\";\n        if (vEnd) {\n            switch (vEnd.constructor) {\n                case Number:\n                    sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd;\n                    break;\n                case String:\n                    sExpires = \"; expires=\" + vEnd;\n                    break;\n                case Date:\n                    sExpires = \"; expires=\" + vEnd.toUTCString();\n                    break;\n            }\n        }\n        document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\");\n        return true;\n    },\n    removeItem: function removeItem(sKey, sPath, sDomain) {\n        if (!this.hasItem(sKey)) {\n            return false;\n        }\n        document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\");\n        return true;\n    },\n    hasItem: function hasItem(sKey) {\n        if (!sKey) {\n            return false;\n        }\n        return new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\").test(document.cookie);\n    },\n    keys: function keys() {\n        var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n        for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);\n        }\n        return aKeys;\n    }\n};\n\nvar terminalColors = ['palevioletred', 'mediumturquoise', 'orange', 'hotpink', 'darkred', 'wheat', 'darkslategrey', 'orangered', 'mintcream', 'darkorchid', 'mediumseagreen', 'salmon', 'lightslategrey', 'rebeccapurple', 'lavender', 'black', 'darkviolet', 'gainsboro', 'slateblue', 'deeppink', 'pink', 'darkslateblue', 'cyan', 'lime', 'blue', 'mediumspringgreen', 'chartreuse', 'mediumslateblue', 'lightsalmon', 'mediumorchid', 'sienna', 'dodgerblue', 'grey', 'aliceblue', 'honeydew', 'goldenrod', 'azure', 'floralwhite', 'lightsteelblue', 'powderblue', 'purple', 'darkolivegreen', 'firebrick', 'midnightblue', 'darkseagreen', 'turquoise', 'darkgreen', 'ghostwhite', 'blanchedalmond', 'coral', 'lavenderblush', 'darkmagenta', 'darksalmon', 'rosybrown', 'lemonchiffon', 'paleturquoise', 'magenta', 'cornsilk', 'brown', 'olivedrab', 'maroon', 'yellowgreen', 'steelblue', 'lightgreen', 'orchid', 'lightcoral', 'cadetblue', 'lightgoldenrodyellow', 'gray', 'darkkhaki', 'fuchsia', 'peachpuff', 'dimgray', 'indianred', 'crimson', 'khaki', 'darkcyan', 'deepskyblue', 'mistyrose', 'royalblue', 'mediumaquamarine', 'mediumvioletred', 'lightgray', 'olive', 'aqua', 'navy', 'peru', 'whitesmoke', 'red', 'lawngreen', 'gold', 'silver', 'lightskyblue', 'forestgreen', 'thistle', 'green', 'tomato', 'beige', 'mediumblue', 'chocolate', 'darkgray', 'dimgray', 'limegreen', 'lightpink', 'burlywood', 'plum', 'oldlace', 'darkturquoise', 'violet', 'skyblue', 'darkgoldenrod', 'snow', 'teal', 'blueviolet', 'ivory', 'saddlebrown', 'palegoldenrod', 'lightgrey', 'darkorange', 'lightcyan', 'yellow', 'linen', 'slategrey', 'bisque', 'papayawhip', 'sandybrown', 'springgreen', 'palegreen', 'lightseagreen', 'lightslategrey', 'darkgrey', 'lightyellow', 'aquamarine', 'seagreen', 'lightblue', 'slategray', 'mediumpurple', 'seashell', 'darkblue', 'tan', 'greenyellow', 'white', 'antiquewhite', 'cornflowerblue', 'navajowhite', 'moccasin', 'indigo' // hell yes i actually typed this out, but I'm sure you'll be happy to know my recovery is going well.\n];\n\nvar app = app || {};\n\n(function () {\n\n    'use strict';\n\n    app.TerminalModel = function () {};\n\n    app.TerminalModel.prototype.formatTerminalCommand = function (terminalCommand) {\n\n        var command = {\n            command: null,\n            option: null,\n            modifier: null\n        },\n            commandParse = terminalCommand.split(\" \");\n\n        command.command = commandParse[0];\n\n        if (commandParse[1]) {\n            if (commandParse[1].substring(0, 1) == '-') {\n                command.modifier = commandParse[1];\n            } else {\n                command.option = commandParse[1];\n            }\n        }\n\n        if (commandParse[2]) command.modifier = commandParse[2];\n        return command;\n    };\n\n    app.TerminalModel.prototype.notAModifier = function (command) {\n        return {\n            message: true,\n            content: '\"' + command.modifier + '\" is not a [modifier] of [' + command.command + ']'\n        };\n    };\n\n    app.TerminalModel.prototype.notAnOption = function (command) {\n        return {\n            message: true,\n            content: '\"' + command.option + '\" is not an [option] of command [' + command.command + ']'\n        };\n    };\n\n    app.TerminalModel.prototype.notACommand = function (command_, previousCommands_, lastCommand_) {\n        var command = command_;\n        var previousCommands = previousCommands_;\n        var lastCommand = lastCommand_;\n        var notACommandMessage = '\"' + command.command + '\" is not a command. A list of commands can be read by calling \"help\"';\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, content: notACommandMessage })\n        };\n    };\n\n    app.TerminalModel.prototype.terminalBackgroundColorChange = function (command_, previousCommands_, lastCommand_) {\n        var command = command_;\n        var previousCommands = previousCommands_;\n        var lastCommand = lastCommand_;\n\n        if (!command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: 'an [option] must be passed to execute a background-color change. A list of valid colors can be found by executing \"style -c\".' })\n            };\n        }\n        if (command.option == 'default') {\n            docCookies.setItem('terminalBackgroundColor', 'rgba(0,0,0,.5)');\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalBackgroundColor: 'rgba(0,0,0,.5)'\n            };\n        }\n        if (this.isInArray(command.option, terminalColors)) {\n            docCookies.setItem('terminalBackgroundColor', command.option.toString());\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalBackgroundColor: command.option\n            };\n        } else {\n            var notAValidColorMessage = '\"' + command.option + '\" is not a valid color.';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: notAValidColorMessage }, { template: 'validColors', message: true, content: '' })\n            };\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandClear = function (command, previousCommands, lastCommand) {\n        if (!command.option && !command.modifier) {\n            return {\n                terminalPreviousCommands: [],\n                terminalPreviousCommandsCount: 0\n            };\n        }\n\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, content: '[clear] does not have any [option]' })\n            };\n        }\n\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: 'clearHelp', content: '' })\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, content: '[clear] does not have any [modifiers]' })\n                    };\n            }\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandHide = function (command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: false, template: 'hideHelp', content: '' })\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAnOption(command))\n            };\n        }\n        docCookies.setItem('terminalHidden', true);\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n            terminalHidden: true\n        };\n    };\n\n    app.TerminalModel.prototype.terminalCommandClose = function (command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: false, template: 'closeHelp', content: '' })\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAnOption(command))\n            };\n        }\n        docCookies.setItem('terminalClosed', true);\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n            terminalClosed: true\n        };\n    };\n\n    app.TerminalModel.prototype.terminalCommandGit = function (command, previousCommands, lastCommand) {\n        if (!command.option && !command.modifier) {\n            window.location = 'https://github.com/ravencole/GDDYN--PORTFOLIO';\n        }\n        if (command.option) {\n            var notAGitCommandOption = '[git] does not accept any options';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: notAGitCommandOption })\n            };\n        }\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: false, template: 'gitHelp', content: '' })\n                    };\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), notAModifier(command))\n                    };\n            }\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandGoto = function (command, previousCommands, lastCommand) {\n        var routes = ['home', 'about', 'gifs', 'map'],\n            minimizeTerminal = false;\n\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: false, template: 'gotoHelp', content: '' })\n                    };\n                    break;\n                case '-l':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: false, template: 'gotoList', content: '' })\n                    };\n                    break;\n                case '-m':\n                    minimizeTerminal = true;\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n        if (this.isInArray(command.option, routes) && command.option) {\n            if (command.option == 'home') {\n                window.location.pathname = '/';\n                if (minimizeTerminal) {\n                    docCookies.setItem('terminalHidden', true);\n                    return { terminalHidden: true };\n                }\n                return;\n            }\n            if (minimizeTerminal) {\n                docCookies.setItem('terminalHidden', true);\n                window.location.pathname = '/' + command.option;\n                return { terminalHidden: true };\n            }\n            window.location.pathname = '/' + command.option;\n            return;\n        } else {\n            if (command.option) {\n                var notARouteMessage = '\"' + command.option + '\" is not a route. You can get a list of routes by calling \"goto -l\".';\n                return {\n                    terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: notARouteMessage })\n                };\n            } else {\n                var requiresAnOptionMessage = '[goto] requires that a valid route [option] be passed. You can get a list of routes by calling \"goto -l\".';\n                return {\n                    terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: requiresAnOptionMessage })\n                };\n            }\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandHelp = function (command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: 'helpHelp', content: '' })\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n\n        if (command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAnOption(command))\n            };\n        }\n\n        return {\n            terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: 'help', content: '' })\n        };\n    };\n\n    app.TerminalModel.prototype.terminalCommandName = function (command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: 'nameHelp', content: '' })\n                    };\n                    break;\n                case '--uppercase':\n                //fallthrough\n                case '-u':\n                    command.option = command.option.toUpperCase();\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        }\n\n        if (command.option) {\n            docCookies.setItem('terminalUserName', command.option);\n            return {\n                terminalUserName: command.option,\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand))\n            };\n        } else {\n            var requiredOptionMessage = '[name] requires that you pass an [option] for your username.';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: requiredOptionMessage })\n            };\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandAbout = function (command, previousCommands, lastCommand, currentPath) {\n        if (command.option) {\n            var noOptions = 'the [about] command does not accept any options';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: false, message: true, content: noOptions })\n            };\n        }\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: 'aboutHelp', message: true, content: '' })\n                    };\n                    break;\n                case '-p':\n                    var formatAboutTemplateName = function formatAboutTemplateName(path) {\n                        var path = path.charAt(0).toUpperCase() + path.slice(1);\n                        return 'about' + path;\n                    };\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: formatAboutTemplateName(currentPath), message: true, content: '' })\n                    };\n                    break;\n                case '-s':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: 'aboutSite', message: true, content: '' })\n                    };\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        } else {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: false, message: true, content: '[about] requires that a [modifier] be passed.' })\n            };\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandStyle = function (command, previousCommands, lastCommand) {\n        if (command.modifier) {\n            switch (command.modifier) {\n                case '--background':\n                //fallthrough\n                case '-bg':\n                    return this.terminalBackgroundColorChange(command, previousCommands, lastCommand);\n                    break;\n                case '-c':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: 'validColors', message: true, content: '' })\n                    };\n                    break;\n                case '--help':\n                //fallthrough\n                case '-h':\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { template: 'styleHelp', message: true, content: '' })\n                    };\n                    break;\n                case '--textcolor':\n                //fallthrough\n                case '-tc':\n                    return this.terminalTextColorChange(command, previousCommands, lastCommand);\n                    break;\n                default:\n                    return {\n                        terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), this.notAModifier(command))\n                    };\n            }\n        } else {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, content: '[style] requires a valid [modifier]' })\n            };\n        }\n    };\n\n    app.TerminalModel.prototype.terminalCommandWatch = function (command, previousCommands, lastCommand) {\n        var animations = ['test'];\n        if (command.option && this.isInArray(command.option, animations)) {\n            var animationTemplate = 'watch' + command.option.substring(0, 1).toUpperCase() + command.option.substring(1);\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: animationTemplate, content: '' })\n            };\n        }\n    };\n\n    app.TerminalModel.prototype.terminalLogCommand = function (lastCommand) {\n        return {\n            message: false, content: lastCommand\n        };\n    };\n\n    app.TerminalModel.prototype.terminalTextColorChange = function (command, previousCommands, lastCommand) {\n        if (!command.option) {\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: 'an [option] must be passed to execute a text-color change. A list of valid colors can be found by executing \"style -c\".' })\n            };\n        }\n        if (command.option == 'default') {\n            docCookies.setItem('terminalTextColor', '#00ff00');\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalTextColor: '#00ff00'\n            };\n        }\n        if (this.isInArray(command.option, terminalColors)) {\n            docCookies.setItem('terminalTextColor', command.option);\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand)),\n                terminalTextColor: command.option\n            };\n        } else {\n            var notAValidColorMessage = '\"' + command.option + '\" is not a valid color.';\n            return {\n                terminalPreviousCommands: previousCommands.concat(this.terminalLogCommand(lastCommand), { message: true, template: false, content: notAValidColorMessage }, { template: 'validColors', message: true, content: '' })\n            };\n        }\n    };\n\n    app.TerminalModel.prototype.isInArray = function (needle, haystack) {\n        var found = false;\n        for (var i = haystack.length - 1; i >= 0; i--) {\n            if (haystack[i] == needle) {\n                found = true;\n            }\n        };\n        return found;\n    };\n})();\n\nvar Terminal = React.createClass({\n    displayName: 'Terminal',\n\n    getInitialState: function getInitialState() {\n        var getTerminalHiddenCookie = docCookies.getItem('terminalHidden'),\n            getVisited = docCookies.getItem('visited'),\n            getTerminalUserName = docCookies.getItem('terminalUserName'),\n            getTerminalTextColor = docCookies.getItem('terminalTextColor'),\n            getTerminalBackgroundColor = docCookies.getItem('terminalBackgroundColor'),\n            pathName = window.location.pathname === '/' ? 'home' : window.location.pathname.substring(1);\n\n        return {\n            currentURIPath: pathName,\n            terminalClosed: false,\n            terminalHidden: getTerminalHiddenCookie ? JSON.parse(getTerminalHiddenCookie) : false,\n            terminalInputText: '',\n            terminalLastCommand: '',\n            terminalPreviousCommands: getVisited ? [{ message: true, template: 'watchTest', content: '' }] : [{ template: 'welcome', message: true, content: '' }],\n            terminalPreviousCommandsCount: 1,\n            terminalUserName: getTerminalUserName ? getTerminalUserName : 'guest',\n            terminalTextColor: getTerminalTextColor ? getTerminalTextColor : '#00ff00',\n            terminalBackgroundColor: getTerminalBackgroundColor ? getTerminalBackgroundColor : 'rgba(0,0,0,.5)'\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        $(document).keypress((function (e) {\n            if (!$(\":focus\")[0]) {\n                this.handleKeyPress(e);\n            }\n        }).bind(this));\n        docCookies.setItem('visited', true);\n    },\n    handleKeyPress: function handleKeyPress(e) {\n        switch (e.keyCode) {\n            case 116:\n                this.handleTerminalClose();\n                break;\n            case 109:\n                if (this.state.terminalHidden) {\n                    this.handleTerminalExpand();\n                } else {\n                    this.handleTerminalMinimize();\n                }\n                break;\n            default:\n                return;\n        }\n    },\n    handleIteraitThroughTerminalCommands: function handleIteraitThroughTerminalCommands() {\n        var previousCommands = this.state.terminalPreviousCommands,\n            commandsCount = this.state.terminalPreviousCommandsCount;\n\n        if (previousCommands == 0 || previousCommands.length < commandsCount) {\n            return;\n        } else {\n            if (previousCommands[previousCommands.length - commandsCount].message) {\n                this.setState({\n                    terminalPreviousCommandsCount: commandsCount + 2,\n                    terminalInputText: previousCommands[previousCommands.length - commandsCount - 1].content,\n                    terminalLastCommand: previousCommands[previousCommands.length - commandsCount - 1].content\n                });\n            } else {\n                this.setState({\n                    terminalPreviousCommandsCount: commandsCount + 1,\n                    terminalInputText: previousCommands[previousCommands.length - commandsCount].content,\n                    terminalLastCommand: previousCommands[previousCommands.length - commandsCount].content\n                });\n            }\n        }\n    },\n    handleTerminalClose: function handleTerminalClose() {\n        this.setState({ terminalClosed: !this.state.terminalClosed });\n    },\n    handleTerminalExpand: function handleTerminalExpand() {\n        this.setState({ terminalHidden: false });\n        docCookies.setItem('terminalHidden', false);\n    },\n    handleTerminalInputSubmit: function handleTerminalInputSubmit(e) {\n        e.preventDefault();\n        this.terminalCommandController(this.props.model.formatTerminalCommand(this.state.terminalInputText));\n    },\n    handleTerminalInputTextChange: function handleTerminalInputTextChange(e) {\n        this.setState({\n            terminalInputText: e.target.value,\n            terminalLastCommand: e.target.value\n        });\n    },\n    handleTerminalMinimize: function handleTerminalMinimize() {\n        this.setState({ terminalHidden: true });\n        docCookies.setItem('terminalHidden', true);\n    },\n    handleTerminalShortCuts: function handleTerminalShortCuts(e) {\n        var key = e.keyCode,\n            UP_ARROW = 38,\n            DOWN_ARROW = 40;\n\n        switch (key) {\n            case UP_ARROW:\n                this.handleIteraitThroughTerminalCommands();\n                break;\n            case DOWN_ARROW:\n                this.setState({ terminalInputText: '', terminalPreviousCommandsCount: 1 });\n                break;\n            default:\n                return;\n        }\n    },\n    terminalCommandController: function terminalCommandController(command) {\n        var previousCommands = this.state.terminalPreviousCommands,\n            lastCommand = this.state.terminalLastCommand;\n\n        this.setState({\n            terminalInputText: '',\n            terminalPreviousCommandsCount: 1\n        });\n\n        switch (command.command) {\n            case 'about':\n                this.setState(this.props.model.terminalCommandAbout(command, previousCommands, lastCommand, this.state.currentURIPath));\n                break;\n            case 'clear':\n                this.setState(this.props.model.terminalCommandClear(command, previousCommands, lastCommand));\n                break;\n            case 'hide':\n                this.setState(this.props.model.terminalCommandHide(command, previousCommands, lastCommand));\n                break;\n            case 'close':\n                this.setState(this.props.model.terminalCommandClose(command, previousCommands, lastCommand));\n                break;\n            case 'git':\n                this.setState(this.props.model.terminalCommandGit(command, previousCommands, lastCommand));\n                break;\n            case 'goto':\n                this.setState(this.props.model.terminalCommandGoto(command, previousCommands, lastCommand));\n                break;\n            case 'name':\n                this.setState(this.props.model.terminalCommandName(command, previousCommands, lastCommand));\n                break;\n            case 'help':\n                this.setState(this.props.model.terminalCommandHelp(command, previousCommands, lastCommand));\n                break;\n            case 'style':\n                this.setState(this.props.model.terminalCommandStyle(command, previousCommands, lastCommand));\n                break;\n            case 'watch':\n                this.setState(this.props.model.terminalCommandWatch(command, previousCommands, lastCommand));\n                break;\n            default:\n                this.setState(this.props.model.notACommand(command, previousCommands, lastCommand));\n                break;\n        }\n    },\n    render: function render() {\n        var styles = {\n            terminal: {\n                color: '#00ff00',\n                height: '450px',\n                width: '800px',\n                fontFamily: 'monaco',\n                position: 'fixed',\n                boxSizing: 'border-box',\n                padding: '10px',\n                backgroundColor: this.state.terminalBackgroundColor,\n                borderRadius: '0 0 5px 5px',\n                zIndex: '10',\n                transition: 'all 250ms ease'\n            },\n            terminalVisible: {\n                bottom: '50%',\n                left: '50%',\n                transform: 'translateX(-50%) translateY(50%)',\n                opacity: '1'\n            },\n            terminalHidden: {\n                bottom: '-30px',\n                left: '0',\n                width: '80px',\n                height: '0px',\n                backgroundColor: 'transparent',\n                transform: 'translateY(-50%)'\n            },\n            terminalClosed: {\n                opacity: '0'\n            },\n            terminalTopBar: {\n                position: 'absolute',\n                top: '-30px',\n                left: '0',\n                height: '30px',\n                width: '100%',\n                borderRadius: '10px 10px 0 0',\n                background: 'linear-gradient(to bottom, #efefef 0%,#d8d8d8 80%)',\n                zIndex: '10',\n                borderRadius: '10px 10px 0 0'\n            }\n        };\n        return React.createElement(\n            'div',\n            {\n                style: [styles.terminal, this.state.terminalHidden ? styles.terminalHidden : styles.terminalVisible, this.state.terminalClosed && styles.terminalClosed],\n                onKeyDown: this.handleTerminalShortCuts\n            },\n            React.createElement(\n                'div',\n                { style: [styles.terminalTopBar] },\n                React.createElement(TerminalButtons, {\n                    handleTerminalClose: this.handleTerminalClose,\n                    handleTerminalExpand: this.handleTerminalExpand,\n                    handleTerminalMinimize: this.handleTerminalMinimize\n                })\n            ),\n            React.createElement(TerminalInput, {\n                ref: 'terminalInputBox',\n                terminalTextColor: this.state.terminalTextColor,\n                terminalHidden: this.state.terminalHidden,\n                terminalClosed: this.state.terminalClosed,\n                terminalInputText: this.state.terminalInputText,\n                terminalPreviousCommands: this.state.terminalPreviousCommands,\n                terminalUserName: this.state.terminalUserName,\n                currentURIPath: this.state.currentURIPath,\n                handleTerminalInputTextChange: this.handleTerminalInputTextChange,\n                handleTerminalInputSubmit: this.handleTerminalInputSubmit,\n                terminalTemplate: this.props.terminalTemplate\n            })\n        );\n    }\n});\n\nvar model = new app.TerminalModel();\n\nvar terminalTemplate = new app.TerminalTemplateModel();\n\nTerminal = Radium(Terminal);\n\nReactDOM.render(React.createElement(Terminal, { className: 'terminal', model: model, terminalTemplate: terminalTemplate }), document.getElementById('terminal'));\n//# sourceMappingURL=terminal.js.map\n"],"sourceRoot":"/source/"}