{"version":3,"sources":["intro.js"],"names":[],"mappings":";;AAAA,IAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,gBAAA,EAAA,EAAA;AACA,iBAAA,EAAA,CAAA;AACA,gBAAA,EAAA,KAAA;SACA,CAAA;KACA;AACA,mBAAA,EAAA,2BAAA;AACA,eAAA;AACA,oBAAA,EAAA,kBAAA;SACA,CAAA;KACA;AACA,qBAAA,EAAA,6BAAA;AACA,YAAA,CAAA,KAAA,GAAA,WAAA,CAAA,IAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA;KACA;AACA,cAAA,EAAA,sBAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,KAAA,KAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,EAAA;AACA,yBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AACA,gBAAA,CAAA,OAAA,GAAA,WAAA,CAAA,IAAA,CAAA,aAAA,EAAA,IAAA,CAAA,CAAA;SACA,MAAA;AACA,gBAAA,CAAA,QAAA,CAAA;AACA,oBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,GAAA,CAAA;aACA,CAAA,CAAA;SACA;KACA;AACA,iBAAA,EAAA,yBAAA;AACA,qBAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA,YAAA,CAAA,QAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;KACA;AACA,UAAA,EAAA,kBAAA;AACA,YAAA,MAAA,GAAA;AACA,gBAAA,EAAA;AACA,0BAAA,EAAA,iBAAA;aACA;AACA,qBAAA,EAAA;AACA,uBAAA,EAAA,GAAA;aACA;SACA,CAAA;AACA,eACA;;cAAA,SAAA,EAAA,aAAA;YACA;;kBAAA,SAAA,EAAA,aAAA,EAAA,KAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,IAAA,MAAA,CAAA,SAAA,CAAA;gBAAA,IAAA,CAAA,KAAA,CAAA,IAAA;aAAA;YACA;;kBAAA,SAAA,EAAA,cAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,EAAA,QAAA,MAAA;gBACA,gCAAA,GAAA,EAAA,oBAAA,EAAA,IAAA,EAAA,WAAA,GAAA;aACA;SACA,CACA;KACA;CACA,CAAA,CAAA;;AAEA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA;;AAEA,QAAA,CAAA,MAAA,CAAA,oBAAA,KAAA,OAAA,EAAA,QAAA,CAAA,cAAA,CAAA,OAAA,CAAA,CAAA,CAAA","file":"intro.js","sourcesContent":["var Intro = React.createClass({\n    getInitialState: function() {\n        return {\n            text: '',\n            count: 0,\n            done: false\n        };\n    },\n    getDefaultProps: function() {\n        return {\n            fullText: 'gddynytdtlls.com'\n        };\n    },\n    componentDidMount: function() {\n        this.timer = setInterval(this.handleText, 190);\n    },\n    handleText: function() {\n        if (this.state.count === this.props.fullText.length) {\n            clearInterval(this.timer);\n            this.fadeOut = setInterval(this.handleFadeOut, 5000);\n        } else {\n            this.setState({ \n                text: this.state.text + this.props.fullText.substring(this.state.count, this.state.count + 1) + '|',\n                count: this.state.count + 1\n            });\n        }\n    },\n    handleFadeOut: function() {\n        clearInterval(this.fadeOut);\n        this.setState({ done: true });\n    },\n    render: function() {\n        var styles = {\n            text: {\n                transition: 'all 1000ms ease'\n            },\n            textColor: {\n                opacity: '0'\n            }\n        };\n        return (\n            <div className=\"intro--cont\">\n                <div className=\"intro--text\" style={[styles.text, this.state.done && styles.textColor]}>{this.state.text}</div>\n                <video className=\"intro__video\" loop muted autoPlay>\n                    <source src=\"/videos/fridge.mp4\" type=\"video/mp4\" />\n                </video>\n            </div>\n        );\n    } \n});\n\nIntro = Radium(Intro);\n\nReactDOM.render(<Intro />, document.getElementById('intro'));\n\n"],"sourceRoot":"/source/"}